{
  "contractName": "BaseERC20Token",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "mintable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "stakable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "burnable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "clonable",
              "type": "bool"
            }
          ],
          "internalType": "struct BaseERC20Token.BaseTokenParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"mintable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"stakable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"burnable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"clonable\",\"type\":\"bool\"}],\"internalType\":\"struct BaseERC20Token.BaseTokenParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"we use a struct for the base token parameters to not overflow the maximum params\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/core/BaseERC20Token.sol\":\"BaseERC20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/core/BaseERC20Token.sol\":{\"keccak256\":\"0x0fd449da4e03cec7ea4a344a033c0ed2ce38d8fe071051ffe4780529328689bc\",\"urls\":[\"bzz-raw://8e557b196412e73827105709c90066591c89072fa413614ef9c081c70ce8776a\",\"dweb:/ipfs/QmfQnAcDKLc8csgXk6hKoaa3PYMwsXBb4nx7KSnJRL7agH\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001ea838038062001ea883398181016040528101906200003791906200067d565b620000576200004b6200016060201b60201c565b6200016860201b60201c565b806000015160049080519060200190620000739291906200022c565b50806020015160059080519060200190620000909291906200022c565b5080604001516003819055508060600151600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060800151600660146101000a81548160ff0219169083151502179055508060c00151600660156101000a81548160ff0219169083151502179055508060a00151600660166101000a81548160ff0219169083151502179055508060e00151600660176101000a81548160ff0219169083151502179055505062000732565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200023a90620006fd565b90600052602060002090601f0160209004810192826200025e5760008555620002aa565b82601f106200027957805160ff1916838001178555620002aa565b82800160010185558215620002aa579182015b82811115620002a95782518255916020019190600101906200028c565b5b509050620002b99190620002bd565b5090565b5b80821115620002d8576000816000905550600101620002be565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200034082620002f5565b810181811067ffffffffffffffff8211171562000362576200036162000306565b5b80604052505050565b600062000377620002dc565b905062000385828262000335565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115620003b757620003b662000306565b5b620003c282620002f5565b9050602081019050919050565b60005b83811015620003ef578082015181840152602081019050620003d2565b83811115620003ff576000848401525b50505050565b60006200041c620004168462000399565b6200036b565b9050828152602081018484840111156200043b576200043a62000394565b5b62000448848285620003cf565b509392505050565b600082601f8301126200046857620004676200038f565b5b81516200047a84826020860162000405565b91505092915050565b6000819050919050565b620004988162000483565b8114620004a457600080fd5b50565b600081519050620004b8816200048d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004eb82620004be565b9050919050565b620004fd81620004de565b81146200050957600080fd5b50565b6000815190506200051d81620004f2565b92915050565b60008115159050919050565b6200053a8162000523565b81146200054657600080fd5b50565b6000815190506200055a816200052f565b92915050565b600061010082840312156200057a5762000579620002f0565b5b620005876101006200036b565b9050600082015167ffffffffffffffff811115620005aa57620005a96200038a565b5b620005b88482850162000450565b600083015250602082015167ffffffffffffffff811115620005df57620005de6200038a565b5b620005ed8482850162000450565b60208301525060406200060384828501620004a7565b604083015250606062000619848285016200050c565b60608301525060806200062f8482850162000549565b60808301525060a0620006458482850162000549565b60a08301525060c06200065b8482850162000549565b60c08301525060e0620006718482850162000549565b60e08301525092915050565b600060208284031215620006965762000695620002e6565b5b600082015167ffffffffffffffff811115620006b757620006b6620002eb565b5b620006c58482850162000560565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200071657607f821691505b6020821081036200072c576200072b620006ce565b5b50919050565b61176680620007426000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d71461024f578063a9059cbb1461027f578063dd62ed3e146102af578063f2fde38b146102df576100ea565b8063715018a6146102095780638da5cb5b1461021357806395d89b4114610231576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102fb565b6040516101049190610ef9565b60405180910390f35b61012760048036038101906101229190610fb4565b61038d565b604051610134919061100f565b60405180910390f35b6101456103b0565b6040516101529190611039565b60405180910390f35b61017560048036038101906101709190611054565b6103ba565b604051610182919061100f565b60405180910390f35b6101936103e9565b6040516101a091906110c3565b60405180910390f35b6101c360048036038101906101be9190610fb4565b6103f2565b6040516101d0919061100f565b60405180910390f35b6101f360048036038101906101ee91906110de565b61049c565b6040516102009190611039565b60405180910390f35b6102116104e5565b005b61021b61056d565b604051610228919061111a565b60405180910390f35b610239610596565b6040516102469190610ef9565b60405180910390f35b61026960048036038101906102649190610fb4565b610628565b604051610276919061100f565b60405180910390f35b61029960048036038101906102949190610fb4565b610712565b6040516102a6919061100f565b60405180910390f35b6102c960048036038101906102c49190611135565b610735565b6040516102d69190611039565b60405180910390f35b6102f960048036038101906102f491906110de565b6107bc565b005b60606004805461030a906111a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610336906111a4565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b6000806103986108b3565b90506103a58185856108bb565b600191505092915050565b6000600354905090565b6000806103c56108b3565b90506103d2858285610a84565b6103dd858585610b10565b60019150509392505050565b60006012905090565b6000806103fd6108b3565b9050610491818585600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461048c9190611204565b6108bb565b600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104ed6108b3565b73ffffffffffffffffffffffffffffffffffffffff1661050b61056d565b73ffffffffffffffffffffffffffffffffffffffff1614610561576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610558906112a6565b60405180910390fd5b61056b6000610d92565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546105a5906111a4565b80601f01602080910402602001604051908101604052809291908181526020018280546105d1906111a4565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b5050505050905090565b6000806106336108b3565b90506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090611338565b60405180910390fd5b61070682868684036108bb565b60019250505092915050565b60008061071d6108b3565b905061072a818585610b10565b600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107c46108b3565b73ffffffffffffffffffffffffffffffffffffffff166107e261056d565b73ffffffffffffffffffffffffffffffffffffffff1614610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f906112a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e906113ca565b60405180910390fd5b6108b081610d92565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361092a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109219061145c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610999576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610990906114ee565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a779190611039565b60405180910390a3505050565b6000610a908484610735565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b0a5781811015610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af39061155a565b60405180910390fd5b610b0984848484036108bb565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b76906115ec565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be59061167e565b60405180910390fd5b610bf9838383610e56565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7790611710565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d159190611204565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d799190611039565b60405180910390a3610d8c848484610e5b565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e9a578082015181840152602081019050610e7f565b83811115610ea9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ecb82610e60565b610ed58185610e6b565b9350610ee5818560208601610e7c565b610eee81610eaf565b840191505092915050565b60006020820190508181036000830152610f138184610ec0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f4b82610f20565b9050919050565b610f5b81610f40565b8114610f6657600080fd5b50565b600081359050610f7881610f52565b92915050565b6000819050919050565b610f9181610f7e565b8114610f9c57600080fd5b50565b600081359050610fae81610f88565b92915050565b60008060408385031215610fcb57610fca610f1b565b5b6000610fd985828601610f69565b9250506020610fea85828601610f9f565b9150509250929050565b60008115159050919050565b61100981610ff4565b82525050565b60006020820190506110246000830184611000565b92915050565b61103381610f7e565b82525050565b600060208201905061104e600083018461102a565b92915050565b60008060006060848603121561106d5761106c610f1b565b5b600061107b86828701610f69565b935050602061108c86828701610f69565b925050604061109d86828701610f9f565b9150509250925092565b600060ff82169050919050565b6110bd816110a7565b82525050565b60006020820190506110d860008301846110b4565b92915050565b6000602082840312156110f4576110f3610f1b565b5b600061110284828501610f69565b91505092915050565b61111481610f40565b82525050565b600060208201905061112f600083018461110b565b92915050565b6000806040838503121561114c5761114b610f1b565b5b600061115a85828601610f69565b925050602061116b85828601610f69565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111bc57607f821691505b6020821081036111cf576111ce611175565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120f82610f7e565b915061121a83610f7e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561124f5761124e6111d5565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611290602083610e6b565b915061129b8261125a565b602082019050919050565b600060208201905081810360008301526112bf81611283565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611322602583610e6b565b915061132d826112c6565b604082019050919050565b6000602082019050818103600083015261135181611315565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006113b4602683610e6b565b91506113bf82611358565b604082019050919050565b600060208201905081810360008301526113e3816113a7565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611446602483610e6b565b9150611451826113ea565b604082019050919050565b6000602082019050818103600083015261147581611439565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114d8602283610e6b565b91506114e38261147c565b604082019050919050565b60006020820190508181036000830152611507816114cb565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611544601d83610e6b565b915061154f8261150e565b602082019050919050565b6000602082019050818103600083015261157381611537565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006115d6602583610e6b565b91506115e18261157a565b604082019050919050565b60006020820190508181036000830152611605816115c9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611668602383610e6b565b91506116738261160c565b604082019050919050565b600060208201905081810360008301526116978161165b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116fa602683610e6b565b91506117058261169e565b604082019050919050565b60006020820190508181036000830152611729816116ed565b905091905056fea2646970667358221220df76b6284c57aba3f335ea813dc123501ba98e2b145010477d2ea2dacfec686164736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d71461024f578063a9059cbb1461027f578063dd62ed3e146102af578063f2fde38b146102df576100ea565b8063715018a6146102095780638da5cb5b1461021357806395d89b4114610231576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102fb565b6040516101049190610ef9565b60405180910390f35b61012760048036038101906101229190610fb4565b61038d565b604051610134919061100f565b60405180910390f35b6101456103b0565b6040516101529190611039565b60405180910390f35b61017560048036038101906101709190611054565b6103ba565b604051610182919061100f565b60405180910390f35b6101936103e9565b6040516101a091906110c3565b60405180910390f35b6101c360048036038101906101be9190610fb4565b6103f2565b6040516101d0919061100f565b60405180910390f35b6101f360048036038101906101ee91906110de565b61049c565b6040516102009190611039565b60405180910390f35b6102116104e5565b005b61021b61056d565b604051610228919061111a565b60405180910390f35b610239610596565b6040516102469190610ef9565b60405180910390f35b61026960048036038101906102649190610fb4565b610628565b604051610276919061100f565b60405180910390f35b61029960048036038101906102949190610fb4565b610712565b6040516102a6919061100f565b60405180910390f35b6102c960048036038101906102c49190611135565b610735565b6040516102d69190611039565b60405180910390f35b6102f960048036038101906102f491906110de565b6107bc565b005b60606004805461030a906111a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610336906111a4565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b6000806103986108b3565b90506103a58185856108bb565b600191505092915050565b6000600354905090565b6000806103c56108b3565b90506103d2858285610a84565b6103dd858585610b10565b60019150509392505050565b60006012905090565b6000806103fd6108b3565b9050610491818585600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461048c9190611204565b6108bb565b600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104ed6108b3565b73ffffffffffffffffffffffffffffffffffffffff1661050b61056d565b73ffffffffffffffffffffffffffffffffffffffff1614610561576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610558906112a6565b60405180910390fd5b61056b6000610d92565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546105a5906111a4565b80601f01602080910402602001604051908101604052809291908181526020018280546105d1906111a4565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b5050505050905090565b6000806106336108b3565b90506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090611338565b60405180910390fd5b61070682868684036108bb565b60019250505092915050565b60008061071d6108b3565b905061072a818585610b10565b600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107c46108b3565b73ffffffffffffffffffffffffffffffffffffffff166107e261056d565b73ffffffffffffffffffffffffffffffffffffffff1614610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f906112a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e906113ca565b60405180910390fd5b6108b081610d92565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361092a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109219061145c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610999576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610990906114ee565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a779190611039565b60405180910390a3505050565b6000610a908484610735565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b0a5781811015610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af39061155a565b60405180910390fd5b610b0984848484036108bb565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b76906115ec565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be59061167e565b60405180910390fd5b610bf9838383610e56565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7790611710565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d159190611204565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d799190611039565b60405180910390a3610d8c848484610e5b565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e9a578082015181840152602081019050610e7f565b83811115610ea9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ecb82610e60565b610ed58185610e6b565b9350610ee5818560208601610e7c565b610eee81610eaf565b840191505092915050565b60006020820190508181036000830152610f138184610ec0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f4b82610f20565b9050919050565b610f5b81610f40565b8114610f6657600080fd5b50565b600081359050610f7881610f52565b92915050565b6000819050919050565b610f9181610f7e565b8114610f9c57600080fd5b50565b600081359050610fae81610f88565b92915050565b60008060408385031215610fcb57610fca610f1b565b5b6000610fd985828601610f69565b9250506020610fea85828601610f9f565b9150509250929050565b60008115159050919050565b61100981610ff4565b82525050565b60006020820190506110246000830184611000565b92915050565b61103381610f7e565b82525050565b600060208201905061104e600083018461102a565b92915050565b60008060006060848603121561106d5761106c610f1b565b5b600061107b86828701610f69565b935050602061108c86828701610f69565b925050604061109d86828701610f9f565b9150509250925092565b600060ff82169050919050565b6110bd816110a7565b82525050565b60006020820190506110d860008301846110b4565b92915050565b6000602082840312156110f4576110f3610f1b565b5b600061110284828501610f69565b91505092915050565b61111481610f40565b82525050565b600060208201905061112f600083018461110b565b92915050565b6000806040838503121561114c5761114b610f1b565b5b600061115a85828601610f69565b925050602061116b85828601610f69565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111bc57607f821691505b6020821081036111cf576111ce611175565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120f82610f7e565b915061121a83610f7e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561124f5761124e6111d5565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611290602083610e6b565b915061129b8261125a565b602082019050919050565b600060208201905081810360008301526112bf81611283565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611322602583610e6b565b915061132d826112c6565b604082019050919050565b6000602082019050818103600083015261135181611315565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006113b4602683610e6b565b91506113bf82611358565b604082019050919050565b600060208201905081810360008301526113e3816113a7565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611446602483610e6b565b9150611451826113ea565b604082019050919050565b6000602082019050818103600083015261147581611439565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114d8602283610e6b565b91506114e38261147c565b604082019050919050565b60006020820190508181036000830152611507816114cb565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611544601d83610e6b565b915061154f8261150e565b602082019050919050565b6000602082019050818103600083015261157381611537565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006115d6602583610e6b565b91506115e18261157a565b604082019050919050565b60006020820190508181036000830152611605816115c9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611668602383610e6b565b91506116738261160c565b604082019050919050565b600060208201905081810360008301526116978161165b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116fa602683610e6b565b91506117058261169e565b604082019050919050565b60006020820190508181036000830152611729816116ed565b905091905056fea2646970667358221220df76b6284c57aba3f335ea813dc123501ba98e2b145010477d2ea2dacfec686164736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7332:73",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:73",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:73",
                "type": ""
              }
            ],
            "src": "7:75:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:73"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:73"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "423:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "440:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "433:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "433:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "433:12:73"
                }
              ]
            },
            "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
            "nodeType": "YulFunctionDefinition",
            "src": "334:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "505:54:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "515:38:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "533:5:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "540:2:73",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "529:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "529:14:73"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "549:2:73",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "545:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "545:7:73"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "525:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:28:73"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "515:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "488:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "498:6:73",
                "type": ""
              }
            ],
            "src": "457:102:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "593:152:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "610:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "613:77:73",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "603:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "603:88:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "603:88:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "707:1:73",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "710:4:73",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "700:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "700:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "700:15:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "731:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "734:4:73",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "724:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "724:15:73"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "565:180:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "794:238:73",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "804:58:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "826:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "856:4:73"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "834:21:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "834:27:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "822:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "822:40:73"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "808:10:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "975:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "916:10:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "928:18:73",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "913:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "913:34:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "952:10:73"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "964:6:73"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "949:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:22:73"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "910:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:62:73"
                  },
                  "nodeType": "YulIf",
                  "src": "907:88:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1011:2:73",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1015:10:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1004:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1004:22:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1004:22:73"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "780:6:73",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "788:4:73",
                "type": ""
              }
            ],
            "src": "751:281:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1079:88:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1089:30:73",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "1099:18:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1099:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1089:6:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1148:6:73"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1156:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "1128:19:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1128:33:73"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1063:4:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1072:6:73",
                "type": ""
              }
            ],
            "src": "1038:129:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1262:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1279:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1282:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1272:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1272:12:73"
                }
              ]
            },
            "name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
            "nodeType": "YulFunctionDefinition",
            "src": "1173:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1385:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1402:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1405:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1395:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1395:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1395:12:73"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "1296:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1508:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1525:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1528:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1518:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1518:12:73"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "1419:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1609:241:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1714:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1716:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1716:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1716:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1686:6:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1694:18:73",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1683:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1683:30:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1680:56:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1746:37:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1776:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "1754:21:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1754:29:73"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1746:4:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1820:23:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1832:4:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1838:4:73",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1828:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1828:15:73"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1820:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1593:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1604:4:73",
                "type": ""
              }
            ],
            "src": "1542:308:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1905:258:73",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1915:10:73",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1924:1:73",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1919:1:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1984:63:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2009:3:73"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2014:1:73"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2005:3:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2005:11:73"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2028:3:73"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2033:1:73"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2024:3:73"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2024:11:73"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2018:5:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2018:18:73"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1998:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1998:39:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1998:39:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1945:1:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1948:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1942:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:13:73"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1956:19:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1958:15:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1967:1:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1970:2:73",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1963:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1963:10:73"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1958:1:73"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1938:3:73",
                    "statements": []
                  },
                  "src": "1934:113:73"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2081:76:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2131:3:73"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2136:6:73"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2127:3:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2127:16:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2145:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2120:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2120:27:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2120:27:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2062:1:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2065:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2059:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2059:13:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2056:101:73"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1887:3:73",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1892:3:73",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1897:6:73",
                "type": ""
              }
            ],
            "src": "1856:307:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2264:326:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2274:75:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2341:6:73"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2299:41:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2299:49:73"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2283:15:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2283:66:73"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2274:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2365:5:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2372:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2358:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2358:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2358:21:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2388:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2403:5:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2410:4:73",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2399:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2399:16:73"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2392:3:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2453:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "2455:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2455:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2455:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2434:3:73"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2439:6:73"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2430:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2430:16:73"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2448:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2427:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2427:25:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2424:112:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2567:3:73"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2572:3:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2577:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2545:21:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2545:39:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2545:39:73"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2237:3:73",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2242:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2250:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2258:5:73",
                "type": ""
              }
            ],
            "src": "2169:421:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2683:282:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2732:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "2734:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2734:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2734:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2711:6:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2719:4:73",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2707:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2707:17:73"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2726:3:73"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2703:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2703:27:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2696:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2696:35:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2693:122:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2824:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2844:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2838:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2838:13:73"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2828:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2860:99:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2932:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2940:4:73",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2928:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2928:17:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2947:6:73"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2955:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2869:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2869:90:73"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2860:5:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2661:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2669:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2677:5:73",
                "type": ""
              }
            ],
            "src": "2610:355:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3016:32:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3026:16:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3037:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3026:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2998:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3008:7:73",
                "type": ""
              }
            ],
            "src": "2971:77:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3097:79:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3154:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3163:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3166:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3156:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3156:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3156:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3120:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3145:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3127:17:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3127:24:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3117:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3117:35:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3110:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3110:43:73"
                  },
                  "nodeType": "YulIf",
                  "src": "3107:63:73"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3090:5:73",
                "type": ""
              }
            ],
            "src": "3054:122:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3245:80:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3255:22:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3270:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3264:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3264:13:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3255:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3313:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3286:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3286:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3286:33:73"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3223:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3231:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3239:5:73",
                "type": ""
              }
            ],
            "src": "3182:143:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3376:81:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3386:65:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3401:5:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3408:42:73",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3397:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3397:54:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3386:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3358:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3368:7:73",
                "type": ""
              }
            ],
            "src": "3331:126:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3508:51:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3518:35:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3547:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3529:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3529:24:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3518:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3490:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3500:7:73",
                "type": ""
              }
            ],
            "src": "3463:96:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3608:79:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3665:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3674:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3677:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3667:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3667:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3667:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3631:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3656:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3638:17:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3638:24:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3628:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3628:35:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3621:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3621:43:73"
                  },
                  "nodeType": "YulIf",
                  "src": "3618:63:73"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3601:5:73",
                "type": ""
              }
            ],
            "src": "3565:122:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3756:80:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3766:22:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3781:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3775:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3775:13:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3766:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3824:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3797:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3797:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3797:33:73"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3734:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3742:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3750:5:73",
                "type": ""
              }
            ],
            "src": "3693:143:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3884:48:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3894:32:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3919:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3912:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3912:13:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3905:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:21:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3894:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3866:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3876:7:73",
                "type": ""
              }
            ],
            "src": "3842:90:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3978:76:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4032:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4041:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4044:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4034:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4034:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4034:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4001:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4023:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "4008:14:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4008:21:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3998:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3998:32:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3991:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3991:40:73"
                  },
                  "nodeType": "YulIf",
                  "src": "3988:60:73"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3971:5:73",
                "type": ""
              }
            ],
            "src": "3938:116:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4120:77:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4130:22:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4145:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4139:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4139:13:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4130:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4185:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4161:23:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4161:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4161:30:73"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4098:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4106:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4114:5:73",
                "type": ""
              }
            ],
            "src": "4060:137:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4348:1891:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4394:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
                            "nodeType": "YulIdentifier",
                            "src": "4396:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4396:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4396:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "4369:3:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4374:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4365:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4365:19:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4386:6:73",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4361:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4361:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "4358:119:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4486:32:73",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4511:6:73",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4495:15:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4495:23:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4486:5:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4528:324:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4563:38:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4587:9:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4598:1:73",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4583:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4583:17:73"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4577:5:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4577:24:73"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4567:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4648:83:73",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
                                "nodeType": "YulIdentifier",
                                "src": "4650:77:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4650:79:73"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4650:79:73"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4620:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4628:18:73",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4617:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4617:30:73"
                      },
                      "nodeType": "YulIf",
                      "src": "4614:117:73"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4756:5:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4763:4:73",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4752:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4752:16:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4816:9:73"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4827:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4812:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4812:22:73"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "4836:3:73"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_string_memory_ptr_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "4770:41:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4770:70:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4745:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4745:96:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4745:96:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4862:327:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4899:39:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4923:9:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4934:2:73",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4919:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4919:18:73"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4913:5:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4913:25:73"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4903:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4985:83:73",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
                                "nodeType": "YulIdentifier",
                                "src": "4987:77:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4987:79:73"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4987:79:73"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4957:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4965:18:73",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4954:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4954:30:73"
                      },
                      "nodeType": "YulIf",
                      "src": "4951:117:73"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5093:5:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5100:4:73",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5089:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5089:16:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5153:9:73"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5164:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5149:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5149:22:73"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "5173:3:73"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_string_memory_ptr_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "5107:41:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5107:70:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5082:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5082:96:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5082:96:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5199:164:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5236:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5250:2:73",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5240:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5277:5:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5284:4:73",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5273:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5273:16:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5327:9:73"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5338:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5323:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5323:22:73"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "5347:3:73"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_uint256_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "5291:31:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5291:60:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5266:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5266:86:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5266:86:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5373:163:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5409:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5423:2:73",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5413:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5450:5:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5457:4:73",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5446:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5446:16:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5500:9:73"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5511:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5496:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5496:22:73"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "5520:3:73"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_address_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "5464:31:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5464:60:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5439:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5439:86:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5439:86:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5546:164:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5585:17:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5599:3:73",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5589:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5627:5:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5634:4:73",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5623:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5623:16:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5674:9:73"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5685:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5670:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5670:22:73"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "5694:3:73"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_bool_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "5641:28:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5641:57:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5616:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5616:83:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5616:83:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5720:164:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5759:17:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5773:3:73",
                        "type": "",
                        "value": "160"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5763:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5801:5:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5808:4:73",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5797:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5797:16:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5848:9:73"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5859:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5844:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5844:22:73"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "5868:3:73"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_bool_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "5815:28:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5815:57:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5790:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5790:83:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5790:83:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5894:164:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5933:17:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5947:3:73",
                        "type": "",
                        "value": "192"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5937:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5975:5:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5982:4:73",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5971:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5971:16:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6022:9:73"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6033:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6018:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6018:22:73"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "6042:3:73"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_bool_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "5989:28:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5989:57:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5964:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5964:83:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5964:83:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6068:164:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6107:17:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6121:3:73",
                        "type": "",
                        "value": "224"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6111:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6149:5:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6156:4:73",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6145:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6145:16:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6196:9:73"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6207:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6192:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6192:22:73"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "6216:3:73"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_bool_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "6163:28:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6163:57:73"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6138:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6138:83:73"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6138:83:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_struct$_BaseTokenParams_$10019_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4323:9:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4334:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4342:5:73",
                "type": ""
              }
            ],
            "src": "4248:1991:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6356:461:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6402:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6404:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6404:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6404:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6377:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6386:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6373:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6373:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6398:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6369:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6369:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "6366:119:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6495:315:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6510:38:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6534:9:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6545:1:73",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6530:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6530:17:73"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6524:5:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6524:24:73"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6514:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6595:83:73",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "6597:77:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6597:79:73"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6597:79:73"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6567:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6575:18:73",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6564:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6564:30:73"
                      },
                      "nodeType": "YulIf",
                      "src": "6561:117:73"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6692:108:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6772:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6783:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6768:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6768:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6792:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_struct$_BaseTokenParams_$10019_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "6702:65:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6702:98:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6692:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_BaseTokenParams_$10019_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6326:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6337:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6349:6:73",
                "type": ""
              }
            ],
            "src": "6245:572:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6851:152:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6868:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6871:77:73",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6861:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6861:88:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6861:88:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6965:1:73",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6968:4:73",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6958:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6958:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6958:15:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6989:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6992:4:73",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6982:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6982:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6982:15:73"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "6823:180:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7060:269:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7070:22:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7084:4:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7090:1:73",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7080:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7080:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7070:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7101:38:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7131:4:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7137:1:73",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7127:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7127:12:73"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7105:18:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7178:51:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7192:27:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7206:6:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7214:4:73",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7202:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7202:17:73"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7192:6:73"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7158:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7151:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7151:26:73"
                  },
                  "nodeType": "YulIf",
                  "src": "7148:81:73"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7281:42:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "7295:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7295:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7295:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7245:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7268:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7276:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7265:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7265:14:73"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7242:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7242:38:73"
                  },
                  "nodeType": "YulIf",
                  "src": "7239:84:73"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7044:4:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7053:6:73",
                "type": ""
              }
            ],
            "src": "7009:320:73"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // struct BaseERC20Token.BaseTokenParams\n    function abi_decode_t_struct$_BaseTokenParams_$10019_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0100) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0100)\n\n        {\n            // name\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // symbol\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x20), abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // supply\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // owner\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // mintable\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // stakable\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // burnable\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // clonable\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_BaseTokenParams_$10019_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_BaseTokenParams_$10019_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 73,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:16226:73",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:73",
                "type": ""
              }
            ],
            "src": "7:99:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "208:73:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "225:3:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "218:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:19:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "218:19:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "246:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "265:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "270:4:73",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "261:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "261:14:73"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "246:11:73"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "180:3:73",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "185:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "196:11:73",
                "type": ""
              }
            ],
            "src": "112:169:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "336:258:73",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "346:10:73",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "355:1:73",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "350:1:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:63:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "440:3:73"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:1:73"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "436:3:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "436:11:73"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "459:3:73"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "464:1:73"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "455:3:73"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "455:11:73"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "449:5:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "449:18:73"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "429:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "429:39:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "429:39:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "376:1:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "373:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:13:73"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "387:19:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "389:15:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "398:1:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "401:2:73",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "394:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "394:10:73"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "389:1:73"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "369:3:73",
                    "statements": []
                  },
                  "src": "365:113:73"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "512:76:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:3:73"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:6:73"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "558:3:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "558:16:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "576:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:27:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:27:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "493:1:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "496:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "490:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:13:73"
                  },
                  "nodeType": "YulIf",
                  "src": "487:101:73"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "318:3:73",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "323:3:73",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "328:6:73",
                "type": ""
              }
            ],
            "src": "287:307:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:54:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "658:38:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "676:5:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:2:73",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:14:73"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "692:2:73",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:7:73"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:28:73"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "658:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "631:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "641:6:73",
                "type": ""
              }
            ],
            "src": "600:102:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "800:272:73",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "810:53:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "857:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "824:32:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:39:73"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "814:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "872:78:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "938:3:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "943:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "879:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:71:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "872:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "985:5:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "992:4:73",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:16:73"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "999:3:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1004:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "959:21:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:52:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "959:52:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1020:46:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1031:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1058:6:73"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1036:21:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:29:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1027:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:39:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1020:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "781:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "788:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "796:3:73",
                "type": ""
              }
            ],
            "src": "708:364:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1196:195:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1206:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1218:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1229:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1214:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1206:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1253:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1264:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1249:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1272:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1278:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1268:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:86:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1370:6:73"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1379:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1306:63:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:78:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1298:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1168:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1180:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1191:4:73",
                "type": ""
              }
            ],
            "src": "1078:313:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1437:35:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1447:19:73",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1463:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1457:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1457:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1447:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1430:6:73",
                "type": ""
              }
            ],
            "src": "1397:75:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1584:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1587:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1577:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1577:12:73"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1478:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1690:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1710:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1700:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1700:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1700:12:73"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1601:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1769:81:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1779:65:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1794:5:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1801:42:73",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1790:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1790:54:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1779:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1751:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1761:7:73",
                "type": ""
              }
            ],
            "src": "1724:126:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1901:51:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1911:35:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1940:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1922:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:24:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1911:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1883:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1893:7:73",
                "type": ""
              }
            ],
            "src": "1856:96:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2001:79:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2058:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2067:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2070:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2060:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2060:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2060:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2024:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2049:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2031:17:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2031:24:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2021:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:35:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2014:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2014:43:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2011:63:73"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1994:5:73",
                "type": ""
              }
            ],
            "src": "1958:122:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2138:87:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2148:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2170:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2157:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2157:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2148:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2213:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2186:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2186:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2186:33:73"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2116:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2124:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2132:5:73",
                "type": ""
              }
            ],
            "src": "2086:139:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2276:32:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2286:16:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2297:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2286:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2258:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2268:7:73",
                "type": ""
              }
            ],
            "src": "2231:77:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2357:79:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2414:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2423:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2426:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2416:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2416:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2416:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2380:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2405:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2387:17:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2387:24:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2377:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2377:35:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2370:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:43:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2367:63:73"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2350:5:73",
                "type": ""
              }
            ],
            "src": "2314:122:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2494:87:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2504:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2526:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2513:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2513:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2504:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2569:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2542:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2542:33:73"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2472:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2480:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2488:5:73",
                "type": ""
              }
            ],
            "src": "2442:139:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2670:391:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2716:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2718:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2718:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2718:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2691:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2700:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2687:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2687:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2712:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2683:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2683:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2680:119:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2809:117:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2824:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2838:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2828:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2853:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2888:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2899:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2884:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2884:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2908:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2863:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2863:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2853:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2936:118:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2951:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2965:2:73",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2955:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2981:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3016:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3027:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3012:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3012:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3036:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2991:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2991:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2981:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2632:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2643:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2655:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2663:6:73",
                "type": ""
              }
            ],
            "src": "2587:474:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3109:48:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3119:32:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3144:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3137:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3137:13:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3130:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3130:21:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3119:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3091:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3101:7:73",
                "type": ""
              }
            ],
            "src": "3067:90:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3222:50:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3239:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3259:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3244:14:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3244:21:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3232:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3232:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3232:34:73"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3210:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3217:3:73",
                "type": ""
              }
            ],
            "src": "3163:109:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3370:118:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3380:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3392:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3403:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3388:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3380:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3454:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3467:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3478:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3463:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3463:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3416:37:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3416:65:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3416:65:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3342:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3354:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3365:4:73",
                "type": ""
              }
            ],
            "src": "3278:210:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3559:53:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3576:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3599:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3581:17:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3581:24:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3569:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3569:37:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3569:37:73"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3547:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3554:3:73",
                "type": ""
              }
            ],
            "src": "3494:118:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3716:124:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3726:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3738:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3749:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3734:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3734:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3726:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3806:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3819:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3830:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3815:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3815:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3762:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3762:71:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3762:71:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3688:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3700:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3711:4:73",
                "type": ""
              }
            ],
            "src": "3618:222:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3946:519:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3992:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3994:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3994:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3994:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3967:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3976:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3963:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3963:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3988:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3959:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3959:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "3956:119:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4085:117:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4100:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4114:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4104:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4129:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4164:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4175:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4160:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4160:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4184:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4139:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4139:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4129:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4212:118:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4227:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4241:2:73",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4231:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4257:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4292:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4303:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4288:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4288:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4312:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4267:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4267:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4257:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4340:118:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4355:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4369:2:73",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4359:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4385:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4420:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4431:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4416:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4416:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4440:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4395:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4395:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4385:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3900:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3911:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3923:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3931:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3939:6:73",
                "type": ""
              }
            ],
            "src": "3846:619:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4514:43:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4524:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4539:5:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4546:4:73",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4535:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4535:16:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4524:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4496:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4506:7:73",
                "type": ""
              }
            ],
            "src": "4471:86:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4624:51:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4641:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4662:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "4646:15:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4646:22:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4634:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4634:35:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4634:35:73"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4612:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4619:3:73",
                "type": ""
              }
            ],
            "src": "4563:112:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4775:120:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4785:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4797:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4808:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4793:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4793:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4785:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4861:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4874:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4885:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4870:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4870:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4821:39:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4821:67:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4821:67:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4747:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4759:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4770:4:73",
                "type": ""
              }
            ],
            "src": "4681:214:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4967:263:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5013:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5015:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5015:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5015:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4988:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4997:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4984:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4984:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5009:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4980:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4980:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "4977:119:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5106:117:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5121:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5135:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5125:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5150:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5185:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5196:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5181:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5181:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5205:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5160:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5160:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5150:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4937:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4948:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4960:6:73",
                "type": ""
              }
            ],
            "src": "4901:329:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5301:53:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5318:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5341:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5323:17:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5323:24:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5311:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5311:37:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5311:37:73"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5289:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5296:3:73",
                "type": ""
              }
            ],
            "src": "5236:118:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5458:124:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5468:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5480:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5491:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5476:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5476:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5468:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5548:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5561:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5572:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5557:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5557:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5504:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5504:71:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5504:71:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5430:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5442:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5453:4:73",
                "type": ""
              }
            ],
            "src": "5360:222:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5671:391:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5717:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5719:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5719:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5719:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5692:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5701:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5688:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5688:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5713:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5684:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5684:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "5681:119:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5810:117:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5825:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5839:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5829:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5854:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5889:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5900:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5885:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5885:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5909:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5864:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5864:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5854:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5937:118:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5952:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5966:2:73",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5956:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5982:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6017:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6028:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6013:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6013:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6037:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5992:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5992:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5982:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5633:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5644:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5656:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5664:6:73",
                "type": ""
              }
            ],
            "src": "5588:474:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6096:152:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6113:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6116:77:73",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6106:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6106:88:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6106:88:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6210:1:73",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6213:4:73",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6203:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6203:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6203:15:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6234:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6237:4:73",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6227:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6227:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6227:15:73"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "6068:180:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6305:269:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6315:22:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6329:4:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6335:1:73",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6325:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6325:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6315:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6346:38:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6376:4:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6382:1:73",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6372:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6372:12:73"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6350:18:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6423:51:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6437:27:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6451:6:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6459:4:73",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6447:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6447:17:73"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6437:6:73"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6403:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6396:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6396:26:73"
                  },
                  "nodeType": "YulIf",
                  "src": "6393:81:73"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6526:42:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "6540:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6540:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6540:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6490:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6513:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6521:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6510:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6510:14:73"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6487:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6487:38:73"
                  },
                  "nodeType": "YulIf",
                  "src": "6484:84:73"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6289:4:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6298:6:73",
                "type": ""
              }
            ],
            "src": "6254:320:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6608:152:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6625:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6628:77:73",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6618:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6618:88:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6618:88:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6722:1:73",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6725:4:73",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6715:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6715:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6715:15:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6746:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6749:4:73",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6739:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6739:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6739:15:73"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6580:180:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6810:261:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6820:25:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6843:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6825:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6825:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6820:1:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6854:25:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6877:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6859:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6859:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6854:1:73"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7017:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7019:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7019:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7019:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6938:1:73"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6945:66:73",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7013:1:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6941:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6941:74:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6935:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6935:81:73"
                  },
                  "nodeType": "YulIf",
                  "src": "6932:107:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7049:16:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7060:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7063:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7056:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7056:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7049:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6797:1:73",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6800:1:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6806:3:73",
                "type": ""
              }
            ],
            "src": "6766:305:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7183:76:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7205:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7213:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7201:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7201:14:73"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7217:34:73",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7194:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7194:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7194:58:73"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7175:6:73",
                "type": ""
              }
            ],
            "src": "7077:182:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7411:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7421:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7487:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7492:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7428:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7428:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7421:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7593:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "7504:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7504:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7504:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7606:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7617:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7622:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7613:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7613:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7606:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7399:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7407:3:73",
                "type": ""
              }
            ],
            "src": "7265:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7808:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7818:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7830:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7841:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7826:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7826:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7818:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7865:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7876:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7861:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7861:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7884:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7890:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7880:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7880:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7854:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7854:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7854:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7910:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8044:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7918:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7918:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7910:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7788:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7803:4:73",
                "type": ""
              }
            ],
            "src": "7637:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8168:118:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8190:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8198:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8186:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8186:14:73"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8202:34:73",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8179:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8179:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8179:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8258:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8266:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8254:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8254:15:73"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8271:7:73",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8247:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8247:32:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8247:32:73"
                }
              ]
            },
            "name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8160:6:73",
                "type": ""
              }
            ],
            "src": "8062:224:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8438:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8448:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8514:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8519:2:73",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8455:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8455:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8448:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8620:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                      "nodeType": "YulIdentifier",
                      "src": "8531:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8531:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8531:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8633:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8644:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8649:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8640:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8640:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8633:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8426:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8434:3:73",
                "type": ""
              }
            ],
            "src": "8292:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8835:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8845:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8857:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8868:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8853:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8853:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8845:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8892:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8903:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8888:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8888:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8911:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8917:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8907:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8907:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8881:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8881:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8881:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8937:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9071:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8945:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8945:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8937:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8815:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8830:4:73",
                "type": ""
              }
            ],
            "src": "8664:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9195:119:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9217:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9225:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9213:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9213:14:73"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9229:34:73",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9206:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9206:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9206:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9285:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9293:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9281:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9281:15:73"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9298:8:73",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9274:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9274:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9274:33:73"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9187:6:73",
                "type": ""
              }
            ],
            "src": "9089:225:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9466:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9476:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9542:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9547:2:73",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9483:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9483:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9476:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9648:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "9559:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9559:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9559:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9661:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9672:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9677:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9668:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9668:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9661:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9454:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9462:3:73",
                "type": ""
              }
            ],
            "src": "9320:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9863:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9873:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9885:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9896:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9881:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9881:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9873:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9920:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9931:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9916:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9916:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9939:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9945:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9935:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9935:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9909:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9909:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9909:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9965:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10099:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9973:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9973:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9965:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9843:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9858:4:73",
                "type": ""
              }
            ],
            "src": "9692:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10223:117:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10245:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10253:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10241:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10241:14:73"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10257:34:73",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10234:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10234:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10234:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10313:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10321:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10309:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10309:15:73"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10326:6:73",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10302:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10302:31:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10302:31:73"
                }
              ]
            },
            "name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10215:6:73",
                "type": ""
              }
            ],
            "src": "10117:223:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10492:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10502:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10568:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10573:2:73",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10509:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10509:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10502:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10674:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                      "nodeType": "YulIdentifier",
                      "src": "10585:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10585:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10585:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10687:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10698:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10703:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10694:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10694:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10687:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10480:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10488:3:73",
                "type": ""
              }
            ],
            "src": "10346:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10889:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10899:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10911:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10922:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10907:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10907:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10899:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10946:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10957:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10942:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10942:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10965:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10971:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10961:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10961:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10935:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10935:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10935:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10991:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11125:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10999:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10999:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10991:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10869:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10884:4:73",
                "type": ""
              }
            ],
            "src": "10718:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11249:115:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11271:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11279:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11267:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11267:14:73"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11283:34:73",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11260:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11260:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11260:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11339:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11347:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11335:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11335:15:73"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11352:4:73",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11328:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11328:29:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11328:29:73"
                }
              ]
            },
            "name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11241:6:73",
                "type": ""
              }
            ],
            "src": "11143:221:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11516:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11526:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11592:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11597:2:73",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11533:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11533:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11526:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11698:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                      "nodeType": "YulIdentifier",
                      "src": "11609:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11609:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11609:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11711:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11722:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11727:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11718:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11718:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11711:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11504:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11512:3:73",
                "type": ""
              }
            ],
            "src": "11370:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11913:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11923:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11935:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11946:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11931:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11931:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11923:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11970:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11981:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11966:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11966:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11989:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11995:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11985:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11985:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11959:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11959:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11959:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12015:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12149:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12023:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12023:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12015:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11893:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11908:4:73",
                "type": ""
              }
            ],
            "src": "11742:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12273:73:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12295:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12303:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12291:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12291:14:73"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12307:31:73",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12284:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12284:55:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12284:55:73"
                }
              ]
            },
            "name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12265:6:73",
                "type": ""
              }
            ],
            "src": "12167:179:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12498:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12508:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12574:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12579:2:73",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12515:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12515:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12508:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12680:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                      "nodeType": "YulIdentifier",
                      "src": "12591:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12591:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12591:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12693:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12704:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12709:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12700:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12700:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12693:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12486:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12494:3:73",
                "type": ""
              }
            ],
            "src": "12352:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12895:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12905:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12917:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12928:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12913:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12913:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12905:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12952:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12963:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12948:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12948:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12971:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12977:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12967:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12967:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12941:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12941:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12941:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12997:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13131:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13005:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13005:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12997:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12875:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12890:4:73",
                "type": ""
              }
            ],
            "src": "12724:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13255:118:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13277:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13285:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13273:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13273:14:73"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13289:34:73",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13266:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13266:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13266:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13345:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13353:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13341:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13341:15:73"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13358:7:73",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13334:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13334:32:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13334:32:73"
                }
              ]
            },
            "name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13247:6:73",
                "type": ""
              }
            ],
            "src": "13149:224:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13525:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13535:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13601:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13606:2:73",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13542:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13542:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13535:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13707:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                      "nodeType": "YulIdentifier",
                      "src": "13618:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13618:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13618:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13720:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13731:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13736:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13727:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13727:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13720:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13513:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13521:3:73",
                "type": ""
              }
            ],
            "src": "13379:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13922:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13932:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13944:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13955:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13940:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13940:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13932:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13979:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13990:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13975:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13975:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13998:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14004:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13994:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13994:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13968:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13968:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13968:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14024:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14158:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14032:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14032:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14024:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13902:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13917:4:73",
                "type": ""
              }
            ],
            "src": "13751:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14282:116:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14304:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14312:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14300:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14300:14:73"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14316:34:73",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14293:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14293:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14293:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14372:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14380:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14368:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14368:15:73"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14385:5:73",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14361:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14361:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14361:30:73"
                }
              ]
            },
            "name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14274:6:73",
                "type": ""
              }
            ],
            "src": "14176:222:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14550:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14560:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14626:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14631:2:73",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14567:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14567:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14560:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14732:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                      "nodeType": "YulIdentifier",
                      "src": "14643:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14643:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14643:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14745:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14756:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14761:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14752:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14752:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14745:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14538:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14546:3:73",
                "type": ""
              }
            ],
            "src": "14404:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14947:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14957:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14969:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14980:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14965:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14965:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14957:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15004:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15015:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15000:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15000:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15023:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15029:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15019:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15019:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14993:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14993:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14993:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15049:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15183:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15057:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15057:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15049:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14927:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14942:4:73",
                "type": ""
              }
            ],
            "src": "14776:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15307:119:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15329:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15337:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15325:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15325:14:73"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15341:34:73",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15318:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15318:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15318:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15397:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15405:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15393:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15393:15:73"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15410:8:73",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15386:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15386:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15386:33:73"
                }
              ]
            },
            "name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15299:6:73",
                "type": ""
              }
            ],
            "src": "15201:225:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15578:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15588:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15654:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15659:2:73",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15595:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15595:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15588:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15760:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                      "nodeType": "YulIdentifier",
                      "src": "15671:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15671:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15671:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15773:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15784:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15789:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15780:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15780:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15773:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15566:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15574:3:73",
                "type": ""
              }
            ],
            "src": "15432:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15975:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15985:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15997:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16008:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15993:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15993:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15985:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16032:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16043:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16028:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16028:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16051:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16057:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16047:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16047:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16021:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16021:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16021:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16077:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16211:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16085:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16085:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16077:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15955:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15970:4:73",
                "type": ""
              }
            ],
            "src": "15804:419:73"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 73,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "264:11684:60:-:0;;;1010:332;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:28;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1072:6:60;:11;;;1064:5;:19;;;;;;;;;;;;:::i;:::-;;1103:6;:13;;;1093:7;:23;;;;;;;;;;;;:::i;:::-;;1141:6;:13;;;1126:12;:28;;;;1173:6;:12;;;1164:6;;:21;;;;;;;;;;;;;;;;;;1207:6;:15;;;1195:9;;:27;;;;;;;;;;;;;;;;;;1244:6;:15;;;1232:9;;:27;;;;;;;;;;;;;;;;;;1281:6;:15;;;1269:9;;:27;;;;;;;;;;;;;;;;;;1318:6;:15;;;1306:9;;:27;;;;;;;;;;;;;;;;;;1010:332;264:11684;;640:96:46;693:7;719:10;712:17;;640:96;:::o;2270:187:28:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;264:11684:60:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:73:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:117::-;1282:1;1279;1272:12;1296:117;1405:1;1402;1395:12;1419:117;1528:1;1525;1518:12;1542:308;1604:4;1694:18;1686:6;1683:30;1680:56;;;1716:18;;:::i;:::-;1680:56;1754:29;1776:6;1754:29;:::i;:::-;1746:37;;1838:4;1832;1828:15;1820:23;;1542:308;;;:::o;1856:307::-;1924:1;1934:113;1948:6;1945:1;1942:13;1934:113;;;2033:1;2028:3;2024:11;2018:18;2014:1;2009:3;2005:11;1998:39;1970:2;1967:1;1963:10;1958:15;;1934:113;;;2065:6;2062:1;2059:13;2056:101;;;2145:1;2136:6;2131:3;2127:16;2120:27;2056:101;1905:258;1856:307;;;:::o;2169:421::-;2258:5;2283:66;2299:49;2341:6;2299:49;:::i;:::-;2283:66;:::i;:::-;2274:75;;2372:6;2365:5;2358:21;2410:4;2403:5;2399:16;2448:3;2439:6;2434:3;2430:16;2427:25;2424:112;;;2455:79;;:::i;:::-;2424:112;2545:39;2577:6;2572:3;2567;2545:39;:::i;:::-;2264:326;2169:421;;;;;:::o;2610:355::-;2677:5;2726:3;2719:4;2711:6;2707:17;2703:27;2693:122;;2734:79;;:::i;:::-;2693:122;2844:6;2838:13;2869:90;2955:3;2947:6;2940:4;2932:6;2928:17;2869:90;:::i;:::-;2860:99;;2683:282;2610:355;;;;:::o;2971:77::-;3008:7;3037:5;3026:16;;2971:77;;;:::o;3054:122::-;3127:24;3145:5;3127:24;:::i;:::-;3120:5;3117:35;3107:63;;3166:1;3163;3156:12;3107:63;3054:122;:::o;3182:143::-;3239:5;3270:6;3264:13;3255:22;;3286:33;3313:5;3286:33;:::i;:::-;3182:143;;;;:::o;3331:126::-;3368:7;3408:42;3401:5;3397:54;3386:65;;3331:126;;;:::o;3463:96::-;3500:7;3529:24;3547:5;3529:24;:::i;:::-;3518:35;;3463:96;;;:::o;3565:122::-;3638:24;3656:5;3638:24;:::i;:::-;3631:5;3628:35;3618:63;;3677:1;3674;3667:12;3618:63;3565:122;:::o;3693:143::-;3750:5;3781:6;3775:13;3766:22;;3797:33;3824:5;3797:33;:::i;:::-;3693:143;;;;:::o;3842:90::-;3876:7;3919:5;3912:13;3905:21;3894:32;;3842:90;;;:::o;3938:116::-;4008:21;4023:5;4008:21;:::i;:::-;4001:5;3998:32;3988:60;;4044:1;4041;4034:12;3988:60;3938:116;:::o;4060:137::-;4114:5;4145:6;4139:13;4130:22;;4161:30;4185:5;4161:30;:::i;:::-;4060:137;;;;:::o;4248:1991::-;4342:5;4386:6;4374:9;4369:3;4365:19;4361:32;4358:119;;;4396:79;;:::i;:::-;4358:119;4495:23;4511:6;4495:23;:::i;:::-;4486:32;;4598:1;4587:9;4583:17;4577:24;4628:18;4620:6;4617:30;4614:117;;;4650:79;;:::i;:::-;4614:117;4770:70;4836:3;4827:6;4816:9;4812:22;4770:70;:::i;:::-;4763:4;4756:5;4752:16;4745:96;4528:324;4934:2;4923:9;4919:18;4913:25;4965:18;4957:6;4954:30;4951:117;;;4987:79;;:::i;:::-;4951:117;5107:70;5173:3;5164:6;5153:9;5149:22;5107:70;:::i;:::-;5100:4;5093:5;5089:16;5082:96;4862:327;5250:2;5291:60;5347:3;5338:6;5327:9;5323:22;5291:60;:::i;:::-;5284:4;5277:5;5273:16;5266:86;5199:164;5423:2;5464:60;5520:3;5511:6;5500:9;5496:22;5464:60;:::i;:::-;5457:4;5450:5;5446:16;5439:86;5373:163;5599:3;5641:57;5694:3;5685:6;5674:9;5670:22;5641:57;:::i;:::-;5634:4;5627:5;5623:16;5616:83;5546:164;5773:3;5815:57;5868:3;5859:6;5848:9;5844:22;5815:57;:::i;:::-;5808:4;5801:5;5797:16;5790:83;5720:164;5947:3;5989:57;6042:3;6033:6;6022:9;6018:22;5989:57;:::i;:::-;5982:4;5975:5;5971:16;5964:83;5894:164;6121:3;6163:57;6216:3;6207:6;6196:9;6192:22;6163:57;:::i;:::-;6156:4;6149:5;6145:16;6138:83;6068:164;4248:1991;;;;:::o;6245:572::-;6349:6;6398:2;6386:9;6377:7;6373:23;6369:32;6366:119;;;6404:79;;:::i;:::-;6366:119;6545:1;6534:9;6530:17;6524:24;6575:18;6567:6;6564:30;6561:117;;;6597:79;;:::i;:::-;6561:117;6702:98;6792:7;6783:6;6772:9;6768:22;6702:98;:::i;:::-;6692:108;;6495:315;6245:572;;;;:::o;6823:180::-;6871:77;6868:1;6861:88;6968:4;6965:1;6958:15;6992:4;6989:1;6982:15;7009:320;7053:6;7090:1;7084:4;7080:12;7070:22;;7137:1;7131:4;7127:12;7158:18;7148:81;;7214:4;7206:6;7202:17;7192:27;;7148:81;7276:2;7268:6;7265:14;7245:18;7242:38;7239:84;;7295:18;;:::i;:::-;7239:84;7060:269;7009:320;;;:::o;264:11684:60:-;;;;;;;",
  "deployedSourceMap": "264:11684:60:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1406:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3683:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2494:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4442:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2343:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5123:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2658:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:28;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1617:102:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5846:417;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2979:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3226:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1406:98:60;1460:13;1492:5;1485:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1406:98;:::o;3683:197::-;3766:4;3782:13;3798:12;:10;:12::i;:::-;3782:28;;3820:32;3829:5;3836:7;3845:6;3820:8;:32::i;:::-;3869:4;3862:11;;;3683:197;;;;:::o;2494:106::-;2555:7;2581:12;;2574:19;;2494:106;:::o;4442:286::-;4569:4;4585:15;4603:12;:10;:12::i;:::-;4585:30;;4625:38;4641:4;4647:7;4656:6;4625:15;:38::i;:::-;4673:27;4683:4;4689:2;4693:6;4673:9;:27::i;:::-;4717:4;4710:11;;;4442:286;;;;;:::o;2343:91::-;2401:5;2425:2;2418:9;;2343:91;:::o;5123:236::-;5211:4;5227:13;5243:12;:10;:12::i;:::-;5227:28;;5265:66;5274:5;5281:7;5320:10;5290:11;:18;5302:5;5290:18;;;;;;;;;;;;;;;:27;5309:7;5290:27;;;;;;;;;;;;;;;;:40;;;;:::i;:::-;5265:8;:66::i;:::-;5348:4;5341:11;;;5123:236;;;;:::o;2658:125::-;2732:7;2758:9;:18;2768:7;2758:18;;;;;;;;;;;;;;;;2751:25;;2658:125;;;:::o;1668:101:28:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1617:102:60:-;1673:13;1705:7;1698:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1617:102;:::o;5846:417::-;5939:4;5955:13;5971:12;:10;:12::i;:::-;5955:28;;5993:24;6020:11;:18;6032:5;6020:18;;;;;;;;;;;;;;;:27;6039:7;6020:27;;;;;;;;;;;;;;;;5993:54;;6085:15;6065:16;:35;;6057:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6168:60;6177:5;6184:7;6212:15;6193:16;:34;6168:8;:60::i;:::-;6252:4;6245:11;;;;5846:417;;;;:::o;2979:189::-;3058:4;3074:13;3090:12;:10;:12::i;:::-;3074:28;;3112;3122:5;3129:2;3133:6;3112:9;:28::i;:::-;3157:4;3150:11;;;2979:189;;;;:::o;3226:149::-;3315:7;3341:11;:18;3353:5;3341:18;;;;;;;;;;;;;;;:27;3360:7;3341:27;;;;;;;;;;;;;;;;3334:34;;3226:149;;;;:::o;1918:198:28:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:46:-;693:7;719:10;712:17;;640:96;:::o;9456:370:60:-;9604:1;9587:19;;:5;:19;;;9579:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9684:1;9665:21;;:7;:21;;;9657:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9766:6;9736:11;:18;9748:5;9736:18;;;;;;;;;;;;;;;:27;9755:7;9736:27;;;;;;;;;;;;;;;:36;;;;9803:7;9787:32;;9796:5;9787:32;;;9812:6;9787:32;;;;;;:::i;:::-;;;;;;;;9456:370;;;:::o;10103:429::-;10233:24;10260:25;10270:5;10277:7;10260:9;:25::i;:::-;10233:52;;10319:17;10299:16;:37;10295:231;;10380:6;10360:16;:26;;10352:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10454:51;10463:5;10470:7;10498:6;10479:16;:25;10454:8;:51::i;:::-;10295:231;10223:309;10103:429;;;:::o;6726:639::-;6868:1;6852:18;;:4;:18;;;6844:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6944:1;6930:16;;:2;:16;;;6922:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6997:38;7018:4;7024:2;7028:6;6997:20;:38::i;:::-;7046:19;7068:9;:15;7078:4;7068:15;;;;;;;;;;;;;;;;7046:37;;7116:6;7101:11;:21;;7093:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7223:6;7209:11;:20;7191:9;:15;7201:4;7191:15;;;;;;;;;;;;;;;:38;;;;7262:6;7245:9;:13;7255:2;7245:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;7299:2;7284:26;;7293:4;7284:26;;;7303:6;7284:26;;;;;;:::i;:::-;;;;;;;;7321:37;7341:4;7347:2;7351:6;7321:19;:37::i;:::-;6834:531;6726:639;;;:::o;2270:187:28:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;11116:121:60:-;;;;:::o;11825:120::-;;;;:::o;7:99:73:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:118::-;5323:24;5341:5;5323:24;:::i;:::-;5318:3;5311:37;5236:118;;:::o;5360:222::-;5453:4;5491:2;5480:9;5476:18;5468:26;;5504:71;5572:1;5561:9;5557:17;5548:6;5504:71;:::i;:::-;5360:222;;;;:::o;5588:474::-;5656:6;5664;5713:2;5701:9;5692:7;5688:23;5684:32;5681:119;;;5719:79;;:::i;:::-;5681:119;5839:1;5864:53;5909:7;5900:6;5889:9;5885:22;5864:53;:::i;:::-;5854:63;;5810:117;5966:2;5992:53;6037:7;6028:6;6017:9;6013:22;5992:53;:::i;:::-;5982:63;;5937:118;5588:474;;;;;:::o;6068:180::-;6116:77;6113:1;6106:88;6213:4;6210:1;6203:15;6237:4;6234:1;6227:15;6254:320;6298:6;6335:1;6329:4;6325:12;6315:22;;6382:1;6376:4;6372:12;6403:18;6393:81;;6459:4;6451:6;6447:17;6437:27;;6393:81;6521:2;6513:6;6510:14;6490:18;6487:38;6484:84;;6540:18;;:::i;:::-;6484:84;6305:269;6254:320;;;:::o;6580:180::-;6628:77;6625:1;6618:88;6725:4;6722:1;6715:15;6749:4;6746:1;6739:15;6766:305;6806:3;6825:20;6843:1;6825:20;:::i;:::-;6820:25;;6859:20;6877:1;6859:20;:::i;:::-;6854:25;;7013:1;6945:66;6941:74;6938:1;6935:81;6932:107;;;7019:18;;:::i;:::-;6932:107;7063:1;7060;7056:9;7049:16;;6766:305;;;;:::o;7077:182::-;7217:34;7213:1;7205:6;7201:14;7194:58;7077:182;:::o;7265:366::-;7407:3;7428:67;7492:2;7487:3;7428:67;:::i;:::-;7421:74;;7504:93;7593:3;7504:93;:::i;:::-;7622:2;7617:3;7613:12;7606:19;;7265:366;;;:::o;7637:419::-;7803:4;7841:2;7830:9;7826:18;7818:26;;7890:9;7884:4;7880:20;7876:1;7865:9;7861:17;7854:47;7918:131;8044:4;7918:131;:::i;:::-;7910:139;;7637:419;;;:::o;8062:224::-;8202:34;8198:1;8190:6;8186:14;8179:58;8271:7;8266:2;8258:6;8254:15;8247:32;8062:224;:::o;8292:366::-;8434:3;8455:67;8519:2;8514:3;8455:67;:::i;:::-;8448:74;;8531:93;8620:3;8531:93;:::i;:::-;8649:2;8644:3;8640:12;8633:19;;8292:366;;;:::o;8664:419::-;8830:4;8868:2;8857:9;8853:18;8845:26;;8917:9;8911:4;8907:20;8903:1;8892:9;8888:17;8881:47;8945:131;9071:4;8945:131;:::i;:::-;8937:139;;8664:419;;;:::o;9089:225::-;9229:34;9225:1;9217:6;9213:14;9206:58;9298:8;9293:2;9285:6;9281:15;9274:33;9089:225;:::o;9320:366::-;9462:3;9483:67;9547:2;9542:3;9483:67;:::i;:::-;9476:74;;9559:93;9648:3;9559:93;:::i;:::-;9677:2;9672:3;9668:12;9661:19;;9320:366;;;:::o;9692:419::-;9858:4;9896:2;9885:9;9881:18;9873:26;;9945:9;9939:4;9935:20;9931:1;9920:9;9916:17;9909:47;9973:131;10099:4;9973:131;:::i;:::-;9965:139;;9692:419;;;:::o;10117:223::-;10257:34;10253:1;10245:6;10241:14;10234:58;10326:6;10321:2;10313:6;10309:15;10302:31;10117:223;:::o;10346:366::-;10488:3;10509:67;10573:2;10568:3;10509:67;:::i;:::-;10502:74;;10585:93;10674:3;10585:93;:::i;:::-;10703:2;10698:3;10694:12;10687:19;;10346:366;;;:::o;10718:419::-;10884:4;10922:2;10911:9;10907:18;10899:26;;10971:9;10965:4;10961:20;10957:1;10946:9;10942:17;10935:47;10999:131;11125:4;10999:131;:::i;:::-;10991:139;;10718:419;;;:::o;11143:221::-;11283:34;11279:1;11271:6;11267:14;11260:58;11352:4;11347:2;11339:6;11335:15;11328:29;11143:221;:::o;11370:366::-;11512:3;11533:67;11597:2;11592:3;11533:67;:::i;:::-;11526:74;;11609:93;11698:3;11609:93;:::i;:::-;11727:2;11722:3;11718:12;11711:19;;11370:366;;;:::o;11742:419::-;11908:4;11946:2;11935:9;11931:18;11923:26;;11995:9;11989:4;11985:20;11981:1;11970:9;11966:17;11959:47;12023:131;12149:4;12023:131;:::i;:::-;12015:139;;11742:419;;;:::o;12167:179::-;12307:31;12303:1;12295:6;12291:14;12284:55;12167:179;:::o;12352:366::-;12494:3;12515:67;12579:2;12574:3;12515:67;:::i;:::-;12508:74;;12591:93;12680:3;12591:93;:::i;:::-;12709:2;12704:3;12700:12;12693:19;;12352:366;;;:::o;12724:419::-;12890:4;12928:2;12917:9;12913:18;12905:26;;12977:9;12971:4;12967:20;12963:1;12952:9;12948:17;12941:47;13005:131;13131:4;13005:131;:::i;:::-;12997:139;;12724:419;;;:::o;13149:224::-;13289:34;13285:1;13277:6;13273:14;13266:58;13358:7;13353:2;13345:6;13341:15;13334:32;13149:224;:::o;13379:366::-;13521:3;13542:67;13606:2;13601:3;13542:67;:::i;:::-;13535:74;;13618:93;13707:3;13618:93;:::i;:::-;13736:2;13731:3;13727:12;13720:19;;13379:366;;;:::o;13751:419::-;13917:4;13955:2;13944:9;13940:18;13932:26;;14004:9;13998:4;13994:20;13990:1;13979:9;13975:17;13968:47;14032:131;14158:4;14032:131;:::i;:::-;14024:139;;13751:419;;;:::o;14176:222::-;14316:34;14312:1;14304:6;14300:14;14293:58;14385:5;14380:2;14372:6;14368:15;14361:30;14176:222;:::o;14404:366::-;14546:3;14567:67;14631:2;14626:3;14567:67;:::i;:::-;14560:74;;14643:93;14732:3;14643:93;:::i;:::-;14761:2;14756:3;14752:12;14745:19;;14404:366;;;:::o;14776:419::-;14942:4;14980:2;14969:9;14965:18;14957:26;;15029:9;15023:4;15019:20;15015:1;15004:9;15000:17;14993:47;15057:131;15183:4;15057:131;:::i;:::-;15049:139;;14776:419;;;:::o;15201:225::-;15341:34;15337:1;15329:6;15325:14;15318:58;15410:8;15405:2;15397:6;15393:15;15386:33;15201:225;:::o;15432:366::-;15574:3;15595:67;15659:2;15654:3;15595:67;:::i;:::-;15588:74;;15671:93;15760:3;15671:93;:::i;:::-;15789:2;15784:3;15780:12;15773:19;;15432:366;;;:::o;15804:419::-;15970:4;16008:2;15997:9;15993:18;15985:26;;16057:9;16051:4;16047:20;16043:1;16032:9;16028:17;16021:47;16085:131;16211:4;16085:131;:::i;:::-;16077:139;;15804:419;;;:::o",
  "source": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\ncontract BaseERC20Token is Context, Ownable, IERC20, IERC20Metadata {\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    address private _owner;\n\n    bool private _mintable;\n    bool private _burnable;\n    bool private _stakable;\n    bool private _clonable;\n\n    struct BaseTokenParams {\n        string name;\n        string symbol;\n        uint256 supply;\n        address owner;\n        bool mintable;\n        bool stakable;\n        bool burnable;\n        bool clonable;\n    }\n\n\n    /// @dev we use a struct for the base token parameters to not overflow the maximum params\n    constructor(BaseTokenParams memory params) {\n\n        _name = params.name;\n        _symbol = params.symbol;\n        _totalSupply = params.supply;\n        _owner = params.owner;\n        _mintable = params.mintable;\n        _burnable = params.burnable;\n        _stakable = params.stakable;\n        _clonable = params.clonable;\n\n\n    }\n\n    /**\n    * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowances[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n    unchecked {\n        _approve(owner, spender, currentAllowance - subtractedValue);\n    }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n    unchecked {\n        _balances[from] = fromBalance - amount;\n    }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(_mintable == true, \"token is not mintable\");\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(_burnable == true, \"token not burnable\");\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n    unchecked {\n        _balances[account] = accountBalance - amount;\n    }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - amount);\n        }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n}\n",
  "sourcePath": "/Users/nicolascloutier/GolandProjects/contracts/contracts/core/BaseERC20Token.sol",
  "ast": {
    "absolutePath": "project:/contracts/core/BaseERC20Token.sol",
    "exportedSymbols": {
      "BaseERC20Token": [
        10624
      ],
      "Context": [
        7501
      ],
      "IERC20": [
        5696
      ],
      "IERC20Metadata": [
        5721
      ],
      "Ownable": [
        4172
      ]
    },
    "id": 10625,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9964,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:60"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 9965,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10625,
        "sourceUnit": 5697,
        "src": "25:56:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 9966,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10625,
        "sourceUnit": 5722,
        "src": "82:75:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9967,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10625,
        "sourceUnit": 4173,
        "src": "158:52:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 9968,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10625,
        "sourceUnit": 7502,
        "src": "211:51:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9969,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7501,
              "src": "291:7:60"
            },
            "id": 9970,
            "nodeType": "InheritanceSpecifier",
            "src": "291:7:60"
          },
          {
            "baseName": {
              "id": 9971,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4172,
              "src": "300:7:60"
            },
            "id": 9972,
            "nodeType": "InheritanceSpecifier",
            "src": "300:7:60"
          },
          {
            "baseName": {
              "id": 9973,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5696,
              "src": "309:6:60"
            },
            "id": 9974,
            "nodeType": "InheritanceSpecifier",
            "src": "309:6:60"
          },
          {
            "baseName": {
              "id": 9975,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5721,
              "src": "317:14:60"
            },
            "id": 9976,
            "nodeType": "InheritanceSpecifier",
            "src": "317:14:60"
          }
        ],
        "canonicalName": "BaseERC20Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10624,
        "linearizedBaseContracts": [
          10624,
          5721,
          5696,
          4172,
          7501
        ],
        "name": "BaseERC20Token",
        "nameLocation": "273:14:60",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9980,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "375:9:60",
            "nodeType": "VariableDeclaration",
            "scope": 10624,
            "src": "339:45:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 9979,
              "keyType": {
                "id": 9977,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "347:7:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "339:27:60",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 9978,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "358:7:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9986,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "447:11:60",
            "nodeType": "VariableDeclaration",
            "scope": 10624,
            "src": "391:67:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 9985,
              "keyType": {
                "id": 9981,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "399:7:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "391:47:60",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 9984,
                "keyType": {
                  "id": 9982,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "418:7:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "410:27:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 9983,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:7:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9988,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "481:12:60",
            "nodeType": "VariableDeclaration",
            "scope": 10624,
            "src": "465:28:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9987,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "465:7:60",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9990,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "515:5:60",
            "nodeType": "VariableDeclaration",
            "scope": 10624,
            "src": "500:20:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9989,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "500:6:60",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9992,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "541:7:60",
            "nodeType": "VariableDeclaration",
            "scope": 10624,
            "src": "526:22:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9991,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "526:6:60",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9994,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "570:6:60",
            "nodeType": "VariableDeclaration",
            "scope": 10624,
            "src": "554:22:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9993,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:60",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9996,
            "mutability": "mutable",
            "name": "_mintable",
            "nameLocation": "596:9:60",
            "nodeType": "VariableDeclaration",
            "scope": 10624,
            "src": "583:22:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9995,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "583:4:60",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9998,
            "mutability": "mutable",
            "name": "_burnable",
            "nameLocation": "624:9:60",
            "nodeType": "VariableDeclaration",
            "scope": 10624,
            "src": "611:22:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9997,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "611:4:60",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10000,
            "mutability": "mutable",
            "name": "_stakable",
            "nameLocation": "652:9:60",
            "nodeType": "VariableDeclaration",
            "scope": 10624,
            "src": "639:22:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9999,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "639:4:60",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10002,
            "mutability": "mutable",
            "name": "_clonable",
            "nameLocation": "680:9:60",
            "nodeType": "VariableDeclaration",
            "scope": 10624,
            "src": "667:22:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10001,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "667:4:60",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "BaseERC20Token.BaseTokenParams",
            "id": 10019,
            "members": [
              {
                "constant": false,
                "id": 10004,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "736:4:60",
                "nodeType": "VariableDeclaration",
                "scope": 10019,
                "src": "729:11:60",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10003,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "729:6:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10006,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "757:6:60",
                "nodeType": "VariableDeclaration",
                "scope": 10019,
                "src": "750:13:60",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10005,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "750:6:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10008,
                "mutability": "mutable",
                "name": "supply",
                "nameLocation": "781:6:60",
                "nodeType": "VariableDeclaration",
                "scope": 10019,
                "src": "773:14:60",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10007,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "773:7:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10010,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "805:5:60",
                "nodeType": "VariableDeclaration",
                "scope": 10019,
                "src": "797:13:60",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10009,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "797:7:60",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10012,
                "mutability": "mutable",
                "name": "mintable",
                "nameLocation": "825:8:60",
                "nodeType": "VariableDeclaration",
                "scope": 10019,
                "src": "820:13:60",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10011,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "820:4:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10014,
                "mutability": "mutable",
                "name": "stakable",
                "nameLocation": "848:8:60",
                "nodeType": "VariableDeclaration",
                "scope": 10019,
                "src": "843:13:60",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10013,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "843:4:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10016,
                "mutability": "mutable",
                "name": "burnable",
                "nameLocation": "871:8:60",
                "nodeType": "VariableDeclaration",
                "scope": 10019,
                "src": "866:13:60",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10015,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "866:4:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10018,
                "mutability": "mutable",
                "name": "clonable",
                "nameLocation": "894:8:60",
                "nodeType": "VariableDeclaration",
                "scope": 10019,
                "src": "889:13:60",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10017,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "889:4:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BaseTokenParams",
            "nameLocation": "703:15:60",
            "nodeType": "StructDefinition",
            "scope": 10624,
            "src": "696:213:60",
            "visibility": "public"
          },
          {
            "body": {
              "id": 10066,
              "nodeType": "Block",
              "src": "1053:289:60",
              "statements": [
                {
                  "expression": {
                    "id": 10029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10026,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9990,
                      "src": "1064:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10027,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10023,
                        "src": "1072:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BaseTokenParams_$10019_memory_ptr",
                          "typeString": "struct BaseERC20Token.BaseTokenParams memory"
                        }
                      },
                      "id": 10028,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10004,
                      "src": "1072:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1064:19:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10030,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:19:60"
                },
                {
                  "expression": {
                    "id": 10034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10031,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9992,
                      "src": "1093:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10032,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10023,
                        "src": "1103:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BaseTokenParams_$10019_memory_ptr",
                          "typeString": "struct BaseERC20Token.BaseTokenParams memory"
                        }
                      },
                      "id": 10033,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10006,
                      "src": "1103:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1093:23:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10035,
                  "nodeType": "ExpressionStatement",
                  "src": "1093:23:60"
                },
                {
                  "expression": {
                    "id": 10039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10036,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9988,
                      "src": "1126:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10037,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10023,
                        "src": "1141:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BaseTokenParams_$10019_memory_ptr",
                          "typeString": "struct BaseERC20Token.BaseTokenParams memory"
                        }
                      },
                      "id": 10038,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10008,
                      "src": "1141:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1126:28:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10040,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:28:60"
                },
                {
                  "expression": {
                    "id": 10044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10041,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9994,
                      "src": "1164:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10042,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10023,
                        "src": "1173:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BaseTokenParams_$10019_memory_ptr",
                          "typeString": "struct BaseERC20Token.BaseTokenParams memory"
                        }
                      },
                      "id": 10043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10010,
                      "src": "1173:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1164:21:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10045,
                  "nodeType": "ExpressionStatement",
                  "src": "1164:21:60"
                },
                {
                  "expression": {
                    "id": 10049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10046,
                      "name": "_mintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9996,
                      "src": "1195:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10047,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10023,
                        "src": "1207:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BaseTokenParams_$10019_memory_ptr",
                          "typeString": "struct BaseERC20Token.BaseTokenParams memory"
                        }
                      },
                      "id": 10048,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10012,
                      "src": "1207:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1195:27:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10050,
                  "nodeType": "ExpressionStatement",
                  "src": "1195:27:60"
                },
                {
                  "expression": {
                    "id": 10054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10051,
                      "name": "_burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9998,
                      "src": "1232:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10052,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10023,
                        "src": "1244:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BaseTokenParams_$10019_memory_ptr",
                          "typeString": "struct BaseERC20Token.BaseTokenParams memory"
                        }
                      },
                      "id": 10053,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10016,
                      "src": "1244:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1232:27:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10055,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:27:60"
                },
                {
                  "expression": {
                    "id": 10059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10056,
                      "name": "_stakable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10000,
                      "src": "1269:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10057,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10023,
                        "src": "1281:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BaseTokenParams_$10019_memory_ptr",
                          "typeString": "struct BaseERC20Token.BaseTokenParams memory"
                        }
                      },
                      "id": 10058,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10014,
                      "src": "1281:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1269:27:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10060,
                  "nodeType": "ExpressionStatement",
                  "src": "1269:27:60"
                },
                {
                  "expression": {
                    "id": 10064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10061,
                      "name": "_clonable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10002,
                      "src": "1306:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10062,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10023,
                        "src": "1318:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BaseTokenParams_$10019_memory_ptr",
                          "typeString": "struct BaseERC20Token.BaseTokenParams memory"
                        }
                      },
                      "id": 10063,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "clonable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10018,
                      "src": "1318:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1306:27:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10065,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:27:60"
                }
              ]
            },
            "documentation": {
              "id": 10020,
              "nodeType": "StructuredDocumentation",
              "src": "916:89:60",
              "text": "@dev we use a struct for the base token parameters to not overflow the maximum params"
            },
            "id": 10067,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10023,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1045:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10067,
                  "src": "1022:29:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BaseTokenParams_$10019_memory_ptr",
                    "typeString": "struct BaseERC20Token.BaseTokenParams"
                  },
                  "typeName": {
                    "id": 10022,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10021,
                      "name": "BaseTokenParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10019,
                      "src": "1022:15:60"
                    },
                    "referencedDeclaration": 10019,
                    "src": "1022:15:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BaseTokenParams_$10019_storage_ptr",
                      "typeString": "struct BaseERC20Token.BaseTokenParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1021:31:60"
            },
            "returnParameters": {
              "id": 10025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1053:0:60"
            },
            "scope": 10624,
            "src": "1010:332:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5708
            ],
            "body": {
              "id": 10076,
              "nodeType": "Block",
              "src": "1475:29:60",
              "statements": [
                {
                  "expression": {
                    "id": 10074,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9990,
                    "src": "1492:5:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 10073,
                  "id": 10075,
                  "nodeType": "Return",
                  "src": "1485:12:60"
                }
              ]
            },
            "documentation": {
              "id": 10068,
              "nodeType": "StructuredDocumentation",
              "src": "1348:53:60",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 10077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1415:4:60",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10070,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1442:8:60"
            },
            "parameters": {
              "id": 10069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1419:2:60"
            },
            "returnParameters": {
              "id": 10073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10072,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10077,
                  "src": "1460:13:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1459:15:60"
            },
            "scope": 10624,
            "src": "1406:98:60",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5714
            ],
            "body": {
              "id": 10086,
              "nodeType": "Block",
              "src": "1688:31:60",
              "statements": [
                {
                  "expression": {
                    "id": 10084,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9992,
                    "src": "1705:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 10083,
                  "id": 10085,
                  "nodeType": "Return",
                  "src": "1698:14:60"
                }
              ]
            },
            "documentation": {
              "id": 10078,
              "nodeType": "StructuredDocumentation",
              "src": "1510:102:60",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 10087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1626:6:60",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10080,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1655:8:60"
            },
            "parameters": {
              "id": 10079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1632:2:60"
            },
            "returnParameters": {
              "id": 10083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10082,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10087,
                  "src": "1673:13:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10081,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1673:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1672:15:60"
            },
            "scope": 10624,
            "src": "1617:102:60",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5720
            ],
            "body": {
              "id": 10096,
              "nodeType": "Block",
              "src": "2408:26:60",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 10094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2425:2:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 10093,
                  "id": 10095,
                  "nodeType": "Return",
                  "src": "2418:9:60"
                }
              ]
            },
            "documentation": {
              "id": 10088,
              "nodeType": "StructuredDocumentation",
              "src": "1725:613:60",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 10097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "2352:8:60",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10090,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2383:8:60"
            },
            "parameters": {
              "id": 10089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:2:60"
            },
            "returnParameters": {
              "id": 10093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10097,
                  "src": "2401:5:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10091,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2401:5:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2400:7:60"
            },
            "scope": 10624,
            "src": "2343:91:60",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5627
            ],
            "body": {
              "id": 10106,
              "nodeType": "Block",
              "src": "2564:36:60",
              "statements": [
                {
                  "expression": {
                    "id": 10104,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9988,
                    "src": "2581:12:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10103,
                  "id": 10105,
                  "nodeType": "Return",
                  "src": "2574:19:60"
                }
              ]
            },
            "documentation": {
              "id": 10098,
              "nodeType": "StructuredDocumentation",
              "src": "2440:49:60",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 10107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2503:11:60",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10100,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2537:8:60"
            },
            "parameters": {
              "id": 10099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2514:2:60"
            },
            "returnParameters": {
              "id": 10103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10102,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10107,
                  "src": "2555:7:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2555:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2554:9:60"
            },
            "scope": 10624,
            "src": "2494:106:60",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5635
            ],
            "body": {
              "id": 10120,
              "nodeType": "Block",
              "src": "2741:42:60",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 10116,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9980,
                      "src": "2758:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10118,
                    "indexExpression": {
                      "id": 10117,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10110,
                      "src": "2768:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2758:18:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10115,
                  "id": 10119,
                  "nodeType": "Return",
                  "src": "2751:25:60"
                }
              ]
            },
            "documentation": {
              "id": 10108,
              "nodeType": "StructuredDocumentation",
              "src": "2606:47:60",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 10121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2667:9:60",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10112,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2714:8:60"
            },
            "parameters": {
              "id": 10111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10110,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2685:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10121,
                  "src": "2677:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2677:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2676:17:60"
            },
            "returnParameters": {
              "id": 10115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10121,
                  "src": "2732:7:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2731:9:60"
            },
            "scope": 10624,
            "src": "2658:125:60",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5645
            ],
            "body": {
              "id": 10145,
              "nodeType": "Block",
              "src": "3064:104:60",
              "statements": [
                {
                  "assignments": [
                    10133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10133,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3082:5:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 10145,
                      "src": "3074:13:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10132,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3074:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10136,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10134,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7491,
                      "src": "3090:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 10135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3090:12:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3074:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10138,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10133,
                        "src": "3122:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10139,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10124,
                        "src": "3129:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10140,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10126,
                        "src": "3133:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10137,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10371,
                      "src": "3112:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10142,
                  "nodeType": "ExpressionStatement",
                  "src": "3112:28:60"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3157:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10131,
                  "id": 10144,
                  "nodeType": "Return",
                  "src": "3150:11:60"
                }
              ]
            },
            "documentation": {
              "id": 10122,
              "nodeType": "StructuredDocumentation",
              "src": "2789:185:60",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 10146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2988:8:60",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10128,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3040:8:60"
            },
            "parameters": {
              "id": 10127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10124,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3005:2:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10146,
                  "src": "2997:10:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2997:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10126,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3017:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10146,
                  "src": "3009:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3009:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2996:28:60"
            },
            "returnParameters": {
              "id": 10131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10146,
                  "src": "3058:4:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3058:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3057:6:60"
            },
            "scope": 10624,
            "src": "2979:189:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5655
            ],
            "body": {
              "id": 10163,
              "nodeType": "Block",
              "src": "3324:51:60",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 10157,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9986,
                        "src": "3341:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 10159,
                      "indexExpression": {
                        "id": 10158,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10149,
                        "src": "3353:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3341:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10161,
                    "indexExpression": {
                      "id": 10160,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10151,
                      "src": "3360:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3341:27:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10156,
                  "id": 10162,
                  "nodeType": "Return",
                  "src": "3334:34:60"
                }
              ]
            },
            "documentation": {
              "id": 10147,
              "nodeType": "StructuredDocumentation",
              "src": "3174:47:60",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 10164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3235:9:60",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10153,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3297:8:60"
            },
            "parameters": {
              "id": 10152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10149,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3253:5:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10164,
                  "src": "3245:13:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3245:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10151,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3268:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10164,
                  "src": "3260:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3244:32:60"
            },
            "returnParameters": {
              "id": 10156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10164,
                  "src": "3315:7:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3314:9:60"
            },
            "scope": 10624,
            "src": "3226:149:60",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5665
            ],
            "body": {
              "id": 10188,
              "nodeType": "Block",
              "src": "3772:108:60",
              "statements": [
                {
                  "assignments": [
                    10176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10176,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3790:5:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 10188,
                      "src": "3782:13:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10175,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3782:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10179,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10177,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7491,
                      "src": "3798:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 10178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3798:12:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3782:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10181,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10176,
                        "src": "3829:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10182,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10167,
                        "src": "3836:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10183,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10169,
                        "src": "3845:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10180,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10558,
                      "src": "3820:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3820:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10185,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:32:60"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3869:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10174,
                  "id": 10187,
                  "nodeType": "Return",
                  "src": "3862:11:60"
                }
              ]
            },
            "documentation": {
              "id": 10165,
              "nodeType": "StructuredDocumentation",
              "src": "3381:297:60",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 10189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3692:7:60",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10171,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3748:8:60"
            },
            "parameters": {
              "id": 10170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10167,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3708:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "3700:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3700:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10169,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3725:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "3717:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3717:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3699:33:60"
            },
            "returnParameters": {
              "id": 10174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10173,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "3766:4:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10172,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3766:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3765:6:60"
            },
            "scope": 10624,
            "src": "3683:197:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5677
            ],
            "body": {
              "id": 10221,
              "nodeType": "Block",
              "src": "4575:153:60",
              "statements": [
                {
                  "assignments": [
                    10203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10203,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "4593:7:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 10221,
                      "src": "4585:15:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10202,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4585:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10206,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10204,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7491,
                      "src": "4603:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 10205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4603:12:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4585:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10208,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10192,
                        "src": "4641:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10209,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10203,
                        "src": "4647:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10210,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10196,
                        "src": "4656:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10207,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10601,
                      "src": "4625:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4625:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10212,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10214,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10192,
                        "src": "4683:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10215,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10194,
                        "src": "4689:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10216,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10196,
                        "src": "4693:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10213,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10371,
                      "src": "4673:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4673:27:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10218,
                  "nodeType": "ExpressionStatement",
                  "src": "4673:27:60"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4717:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10201,
                  "id": 10220,
                  "nodeType": "Return",
                  "src": "4710:11:60"
                }
              ]
            },
            "documentation": {
              "id": 10190,
              "nodeType": "StructuredDocumentation",
              "src": "3886:551:60",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 10222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4451:12:60",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10198,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4551:8:60"
            },
            "parameters": {
              "id": 10197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10192,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4481:4:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "4473:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4473:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10194,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4503:2:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "4495:10:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10196,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4523:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "4515:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4515:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4463:72:60"
            },
            "returnParameters": {
              "id": 10201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "4569:4:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10199,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4569:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4568:6:60"
            },
            "scope": 10624,
            "src": "4442:286:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10251,
              "nodeType": "Block",
              "src": "5217:142:60",
              "statements": [
                {
                  "assignments": [
                    10233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10233,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5235:5:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 10251,
                      "src": "5227:13:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10232,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5227:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10236,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10234,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7491,
                      "src": "5243:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 10235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5243:12:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5227:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10238,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10233,
                        "src": "5274:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10239,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10225,
                        "src": "5281:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 10240,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9986,
                              "src": "5290:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 10242,
                            "indexExpression": {
                              "id": 10241,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10233,
                              "src": "5302:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5290:18:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 10244,
                          "indexExpression": {
                            "id": 10243,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10225,
                            "src": "5309:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5290:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 10245,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10227,
                          "src": "5320:10:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5290:40:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10237,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10558,
                      "src": "5265:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5265:66:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10248,
                  "nodeType": "ExpressionStatement",
                  "src": "5265:66:60"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5348:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10231,
                  "id": 10250,
                  "nodeType": "Return",
                  "src": "5341:11:60"
                }
              ]
            },
            "documentation": {
              "id": 10223,
              "nodeType": "StructuredDocumentation",
              "src": "4734:384:60",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 10252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5132:17:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10225,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5158:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10252,
                  "src": "5150:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5150:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10227,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5175:10:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10252,
                  "src": "5167:18:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5167:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5149:37:60"
            },
            "returnParameters": {
              "id": 10231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10252,
                  "src": "5211:4:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10229,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5210:6:60"
            },
            "scope": 10624,
            "src": "5123:236:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10293,
              "nodeType": "Block",
              "src": "5945:318:60",
              "statements": [
                {
                  "assignments": [
                    10263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10263,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5963:5:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 10293,
                      "src": "5955:13:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5955:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10266,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10264,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7491,
                      "src": "5971:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 10265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5971:12:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5955:28:60"
                },
                {
                  "assignments": [
                    10268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10268,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6001:16:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 10293,
                      "src": "5993:24:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10267,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5993:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10274,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 10269,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9986,
                        "src": "6020:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 10271,
                      "indexExpression": {
                        "id": 10270,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10263,
                        "src": "6032:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6020:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10273,
                    "indexExpression": {
                      "id": 10272,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10255,
                      "src": "6039:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6020:27:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5993:54:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10276,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10268,
                          "src": "6065:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10277,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10257,
                          "src": "6085:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6065:35:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 10279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6102:39:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 10275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6057:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6057:85:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10281,
                  "nodeType": "ExpressionStatement",
                  "src": "6057:85:60"
                },
                {
                  "id": 10290,
                  "nodeType": "UncheckedBlock",
                  "src": "6148:87:60",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 10283,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10263,
                            "src": "6177:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10284,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10255,
                            "src": "6184:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10285,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10268,
                              "src": "6193:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 10286,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10257,
                              "src": "6212:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6193:34:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10282,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10558,
                          "src": "6168:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 10288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6168:60:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 10289,
                      "nodeType": "ExpressionStatement",
                      "src": "6168:60:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6252:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10261,
                  "id": 10292,
                  "nodeType": "Return",
                  "src": "6245:11:60"
                }
              ]
            },
            "documentation": {
              "id": 10253,
              "nodeType": "StructuredDocumentation",
              "src": "5365:476:60",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 10294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "5855:17:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10255,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5881:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10294,
                  "src": "5873:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5873:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10257,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "5898:15:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10294,
                  "src": "5890:23:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5890:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5872:42:60"
            },
            "returnParameters": {
              "id": 10261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10260,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10294,
                  "src": "5939:4:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5939:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5938:6:60"
            },
            "scope": 10624,
            "src": "5846:417:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10370,
              "nodeType": "Block",
              "src": "6834:531:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10305,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10297,
                          "src": "6852:4:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6868:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6860:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10306,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6860:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6860:10:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6852:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 10311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6872:39:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 10304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6844:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6844:68:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10313,
                  "nodeType": "ExpressionStatement",
                  "src": "6844:68:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10315,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10299,
                          "src": "6930:2:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6944:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6936:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10316,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6936:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6936:10:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6930:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 10321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6948:37:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 10314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6922:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6922:64:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10323,
                  "nodeType": "ExpressionStatement",
                  "src": "6922:64:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10325,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10297,
                        "src": "7018:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10326,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10299,
                        "src": "7024:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10327,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10301,
                        "src": "7028:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10324,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10612,
                      "src": "6997:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6997:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10329,
                  "nodeType": "ExpressionStatement",
                  "src": "6997:38:60"
                },
                {
                  "assignments": [
                    10331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10331,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "7054:11:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 10370,
                      "src": "7046:19:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10330,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7046:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10335,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10332,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9980,
                      "src": "7068:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10334,
                    "indexExpression": {
                      "id": 10333,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10297,
                      "src": "7078:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7068:15:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7046:37:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10337,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10331,
                          "src": "7101:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10338,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10301,
                          "src": "7116:6:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7101:21:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 10340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7124:40:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 10336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7093:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7093:72:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10342,
                  "nodeType": "ExpressionStatement",
                  "src": "7093:72:60"
                },
                {
                  "id": 10351,
                  "nodeType": "UncheckedBlock",
                  "src": "7171:65:60",
                  "statements": [
                    {
                      "expression": {
                        "id": 10349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 10343,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9980,
                            "src": "7191:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 10345,
                          "indexExpression": {
                            "id": 10344,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10297,
                            "src": "7201:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7191:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10346,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10331,
                            "src": "7209:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 10347,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10301,
                            "src": "7223:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7209:20:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7191:38:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10350,
                      "nodeType": "ExpressionStatement",
                      "src": "7191:38:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 10356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10352,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9980,
                        "src": "7245:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10354,
                      "indexExpression": {
                        "id": 10353,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10299,
                        "src": "7255:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7245:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 10355,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10301,
                      "src": "7262:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7245:23:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10357,
                  "nodeType": "ExpressionStatement",
                  "src": "7245:23:60"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10359,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10297,
                        "src": "7293:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10360,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10299,
                        "src": "7299:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10361,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10301,
                        "src": "7303:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10358,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5686,
                      "src": "7284:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7284:26:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10363,
                  "nodeType": "EmitStatement",
                  "src": "7279:31:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10365,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10297,
                        "src": "7341:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10366,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10299,
                        "src": "7347:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10367,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10301,
                        "src": "7351:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10364,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10623,
                      "src": "7321:19:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7321:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10369,
                  "nodeType": "ExpressionStatement",
                  "src": "7321:37:60"
                }
              ]
            },
            "documentation": {
              "id": 10295,
              "nodeType": "StructuredDocumentation",
              "src": "6269:452:60",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
            },
            "id": 10371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "6735:9:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10297,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6762:4:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10371,
                  "src": "6754:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6754:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10299,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6784:2:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10371,
                  "src": "6776:10:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6776:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10301,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6804:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10371,
                  "src": "6796:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6796:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6744:72:60"
            },
            "returnParameters": {
              "id": 10303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6834:0:60"
            },
            "scope": 10624,
            "src": "6726:639:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10433,
              "nodeType": "Block",
              "src": "7706:385:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10380,
                          "name": "_mintable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9996,
                          "src": "7724:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 10381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7737:4:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7724:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e206973206e6f74206d696e7461626c65",
                        "id": 10383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7743:23:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db29a224f8e36a14cec730a767ea32e6548535e8d8ba53ef9829a96c9da62dc4",
                          "typeString": "literal_string \"token is not mintable\""
                        },
                        "value": "token is not mintable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db29a224f8e36a14cec730a767ea32e6548535e8d8ba53ef9829a96c9da62dc4",
                          "typeString": "literal_string \"token is not mintable\""
                        }
                      ],
                      "id": 10379,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7716:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7716:51:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10385,
                  "nodeType": "ExpressionStatement",
                  "src": "7716:51:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10387,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10374,
                          "src": "7785:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7804:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7796:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10388,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7796:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7796:10:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7785:21:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 10393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7808:33:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 10386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7777:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7777:65:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10395,
                  "nodeType": "ExpressionStatement",
                  "src": "7777:65:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7882:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7874:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10397,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7874:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7874:10:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10401,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10374,
                        "src": "7886:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10402,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10376,
                        "src": "7895:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10396,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10612,
                      "src": "7853:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7853:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10404,
                  "nodeType": "ExpressionStatement",
                  "src": "7853:49:60"
                },
                {
                  "expression": {
                    "id": 10407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10405,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9988,
                      "src": "7913:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 10406,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10376,
                      "src": "7929:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7913:22:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10408,
                  "nodeType": "ExpressionStatement",
                  "src": "7913:22:60"
                },
                {
                  "expression": {
                    "id": 10413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10409,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9980,
                        "src": "7945:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10411,
                      "indexExpression": {
                        "id": 10410,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10374,
                        "src": "7955:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7945:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 10412,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10376,
                      "src": "7967:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7945:28:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10414,
                  "nodeType": "ExpressionStatement",
                  "src": "7945:28:60"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8005:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7997:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7997:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7997:10:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10420,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10374,
                        "src": "8009:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10421,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10376,
                        "src": "8018:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10415,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5686,
                      "src": "7988:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7988:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10423,
                  "nodeType": "EmitStatement",
                  "src": "7983:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8064:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8056:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10425,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8056:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8056:10:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10429,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10374,
                        "src": "8068:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10430,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10376,
                        "src": "8077:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10424,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10623,
                      "src": "8036:19:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8036:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10432,
                  "nodeType": "ExpressionStatement",
                  "src": "8036:48:60"
                }
              ]
            },
            "documentation": {
              "id": 10372,
              "nodeType": "StructuredDocumentation",
              "src": "7371:265:60",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 10434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "7650:5:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10374,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7664:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10434,
                  "src": "7656:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7656:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10376,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7681:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10434,
                  "src": "7673:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7673:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7655:33:60"
            },
            "returnParameters": {
              "id": 10378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7706:0:60"
            },
            "scope": 10624,
            "src": "7641:450:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10512,
              "nodeType": "Block",
              "src": "8476:557:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10443,
                          "name": "_burnable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9998,
                          "src": "8494:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 10444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8507:4:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "8494:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e206e6f74206275726e61626c65",
                        "id": 10446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8513:20:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0c40d8cceaab72ab3752c55b4dbd0f579bdb602aac9016a11d5ece23c025459",
                          "typeString": "literal_string \"token not burnable\""
                        },
                        "value": "token not burnable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0c40d8cceaab72ab3752c55b4dbd0f579bdb602aac9016a11d5ece23c025459",
                          "typeString": "literal_string \"token not burnable\""
                        }
                      ],
                      "id": 10442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8486:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8486:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10448,
                  "nodeType": "ExpressionStatement",
                  "src": "8486:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10450,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10437,
                          "src": "8552:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8571:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8563:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10451,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8563:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8563:10:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8552:21:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 10456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8575:35:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 10449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8544:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8544:67:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10458,
                  "nodeType": "ExpressionStatement",
                  "src": "8544:67:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10460,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10437,
                        "src": "8643:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8660:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8652:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8652:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8652:10:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10465,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10439,
                        "src": "8664:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10459,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10612,
                      "src": "8622:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8622:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10467,
                  "nodeType": "ExpressionStatement",
                  "src": "8622:49:60"
                },
                {
                  "assignments": [
                    10469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10469,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "8690:14:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 10512,
                      "src": "8682:22:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8682:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10473,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10470,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9980,
                      "src": "8707:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10472,
                    "indexExpression": {
                      "id": 10471,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10437,
                      "src": "8717:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8707:18:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8682:43:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10475,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10469,
                          "src": "8743:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10476,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10439,
                          "src": "8761:6:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8743:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 10478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8769:36:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 10474,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8735:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8735:71:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10480,
                  "nodeType": "ExpressionStatement",
                  "src": "8735:71:60"
                },
                {
                  "id": 10489,
                  "nodeType": "UncheckedBlock",
                  "src": "8812:71:60",
                  "statements": [
                    {
                      "expression": {
                        "id": 10487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 10481,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9980,
                            "src": "8832:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 10483,
                          "indexExpression": {
                            "id": 10482,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10437,
                            "src": "8842:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8832:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10484,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10469,
                            "src": "8853:14:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 10485,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10439,
                            "src": "8870:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8853:23:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8832:44:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10488,
                      "nodeType": "ExpressionStatement",
                      "src": "8832:44:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 10492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10490,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9988,
                      "src": "8892:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 10491,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10439,
                      "src": "8908:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8892:22:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10493,
                  "nodeType": "ExpressionStatement",
                  "src": "8892:22:60"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10495,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10437,
                        "src": "8939:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8956:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8948:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10496,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8948:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8948:10:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10500,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10439,
                        "src": "8960:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10494,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5686,
                      "src": "8930:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8930:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10502,
                  "nodeType": "EmitStatement",
                  "src": "8925:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10504,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10437,
                        "src": "8998:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9015:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9007:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10505,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9007:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9007:10:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10509,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10439,
                        "src": "9019:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10503,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10623,
                      "src": "8978:19:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8978:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10511,
                  "nodeType": "ExpressionStatement",
                  "src": "8978:48:60"
                }
              ]
            },
            "documentation": {
              "id": 10435,
              "nodeType": "StructuredDocumentation",
              "src": "8097:309:60",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 10513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8420:5:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10437,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8434:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10513,
                  "src": "8426:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8426:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10439,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8451:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10513,
                  "src": "8443:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8443:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8425:33:60"
            },
            "returnParameters": {
              "id": 10441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8476:0:60"
            },
            "scope": 10624,
            "src": "8411:622:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10557,
              "nodeType": "Block",
              "src": "9569:257:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10524,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10516,
                          "src": "9587:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9604:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9596:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10525,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9596:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9596:10:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9587:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 10530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9608:38:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 10523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9579:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9579:68:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10532,
                  "nodeType": "ExpressionStatement",
                  "src": "9579:68:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10534,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10518,
                          "src": "9665:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9684:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9676:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10535,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9676:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9676:10:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9665:21:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 10540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9688:36:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 10533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9657:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9657:68:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10542,
                  "nodeType": "ExpressionStatement",
                  "src": "9657:68:60"
                },
                {
                  "expression": {
                    "id": 10549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10543,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9986,
                          "src": "9736:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 10546,
                        "indexExpression": {
                          "id": 10544,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10516,
                          "src": "9748:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9736:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10547,
                      "indexExpression": {
                        "id": 10545,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10518,
                        "src": "9755:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9736:27:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10548,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10520,
                      "src": "9766:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9736:36:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10550,
                  "nodeType": "ExpressionStatement",
                  "src": "9736:36:60"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10552,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10516,
                        "src": "9796:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10553,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10518,
                        "src": "9803:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10554,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10520,
                        "src": "9812:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10551,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5695,
                      "src": "9787:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9787:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10556,
                  "nodeType": "EmitStatement",
                  "src": "9782:37:60"
                }
              ]
            },
            "documentation": {
              "id": 10514,
              "nodeType": "StructuredDocumentation",
              "src": "9039:412:60",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 10558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "9465:8:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10516,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9491:5:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10558,
                  "src": "9483:13:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9483:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10518,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "9514:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10558,
                  "src": "9506:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9506:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10520,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9539:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10558,
                  "src": "9531:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9531:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9473:78:60"
            },
            "returnParameters": {
              "id": 10522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9569:0:60"
            },
            "scope": 10624,
            "src": "9456:370:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10600,
              "nodeType": "Block",
              "src": "10223:309:60",
              "statements": [
                {
                  "assignments": [
                    10569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10569,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "10241:16:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 10600,
                      "src": "10233:24:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10568,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10233:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10574,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10571,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10561,
                        "src": "10270:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10572,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10563,
                        "src": "10277:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10570,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10164,
                      "src": "10260:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 10573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10260:25:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10233:52:60"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10575,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10569,
                      "src": "10299:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 10578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10324:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 10577,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10324:7:60",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 10576,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "10319:4:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 10579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10319:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 10580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "10319:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10299:37:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10599,
                  "nodeType": "IfStatement",
                  "src": "10295:231:60",
                  "trueBody": {
                    "id": 10598,
                    "nodeType": "Block",
                    "src": "10338:188:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10583,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10569,
                                "src": "10360:16:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 10584,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10565,
                                "src": "10380:6:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10360:26:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 10586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10388:31:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              },
                              "value": "ERC20: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              }
                            ],
                            "id": 10582,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "10352:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10352:68:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10588,
                        "nodeType": "ExpressionStatement",
                        "src": "10352:68:60"
                      },
                      {
                        "id": 10597,
                        "nodeType": "UncheckedBlock",
                        "src": "10430:86:60",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10590,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10561,
                                  "src": "10463:5:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 10591,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10563,
                                  "src": "10470:7:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 10594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 10592,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10569,
                                    "src": "10479:16:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 10593,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10565,
                                    "src": "10498:6:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10479:25:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 10589,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10558,
                                "src": "10454:8:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 10595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10454:51:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 10596,
                            "nodeType": "ExpressionStatement",
                            "src": "10454:51:60"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10559,
              "nodeType": "StructuredDocumentation",
              "src": "9832:266:60",
              "text": " @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 10601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "10112:15:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10561,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10145:5:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10601,
                  "src": "10137:13:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10137:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10563,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10168:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10601,
                  "src": "10160:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10160:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10565,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10193:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10601,
                  "src": "10185:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10185:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10127:78:60"
            },
            "returnParameters": {
              "id": 10567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10223:0:60"
            },
            "scope": 10624,
            "src": "10103:429:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10611,
              "nodeType": "Block",
              "src": "11235:2:60",
              "statements": []
            },
            "documentation": {
              "id": 10602,
              "nodeType": "StructuredDocumentation",
              "src": "10538:573:60",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 10612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "11125:20:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10604,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11163:4:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10612,
                  "src": "11155:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11155:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10606,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11185:2:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10612,
                  "src": "11177:10:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11177:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10608,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11205:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10612,
                  "src": "11197:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11197:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11145:72:60"
            },
            "returnParameters": {
              "id": 10610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11235:0:60"
            },
            "scope": 10624,
            "src": "11116:121:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10622,
              "nodeType": "Block",
              "src": "11943:2:60",
              "statements": []
            },
            "documentation": {
              "id": 10613,
              "nodeType": "StructuredDocumentation",
              "src": "11243:577:60",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 10623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "11834:19:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10615,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11871:4:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10623,
                  "src": "11863:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11863:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10617,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11893:2:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10623,
                  "src": "11885:10:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11885:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10619,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11913:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10623,
                  "src": "11905:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11905:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11853:72:60"
            },
            "returnParameters": {
              "id": 10621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11943:0:60"
            },
            "scope": 10624,
            "src": "11825:120:60",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 10625,
        "src": "264:11684:60",
        "usedErrors": []
      }
    ],
    "src": "0:11949:60"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-01T15:48:00.305Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "we use a struct for the base token parameters to not overflow the maximum params"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}